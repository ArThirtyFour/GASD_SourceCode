# –∏–º–ø–æ—Ä—Ç—ã
from datetime import datetime, timedelta
import asyncio
import re
import logging
import random
import time
from flyerapi import Flyer

# pyro
from pyrogram.handlers import MessageHandler
from pyrogram import Client, filters, idle, errors
from pyrogram.enums import ChatMemberStatus, ParseMode, ChatType, ChatAction, MessageMediaType
from pyrogram.errors import UserIsBlocked, InputUserDeactivated, UserNotParticipant, UsernameInvalid, FloodWait, \
    UserDeactivated, UserBlocked, ChatAdminRequired, UserAdminInvalid, MessageDeleteForbidden
from pyrogram.raw.functions.channels import CreateForumTopic, EditForumTopic
from pyrogram.types import (InlineQueryResultArticle, InputTextMessageContent, InputMediaPhoto, InputMediaVideo,
                            InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, ChatPermissions,
                            ChatPrivileges)

# –ø–µ—Ä–µ–Ω–æ—Å–∏–º –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥–∏, –≤–∫–ª—é—á–∞—è —Ç–æ–∫–µ–Ω, –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
from config import DIMA, themes, API_TOKEN, mm_pictures, no_info_pictures, scam_pictures, staff_pictures, \
    high_chances_pictures, good_morning_pictures, good_morning_advices, good_night_pictures, good_night_advices, \
    bad_stickers, trusted_pictures, channel, report_group, TOKEN, numberEmojies, lol

from functions import dotdict, get_date, get_country, get_country_emojie

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from keyboards import MAIN_KB, AS_REPORT_KB, CHANNEL_KB, DEFAULT_KB, HIDE_KB, WHAT_TO_DO_KB, COUNTRIES_1
from sqlite3_functions import sql_edit, sql_select, sqlite_start_commands, connection, scam_list, \
    support_symbols

the_most_recent_search = '<i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫—Ä—ã—Ç</i>'
commands_use = {}
banned = []
adm_limits = {}
report_in_progress = []

commands = {
    'check': 0, 'start': 0, 'stats': 0, 'me': 0, 'report': 0, 'help': 0, 'admins': 0, 'mms': 0,
    'scamwarn': 0, 'shown': 0, 'hidden': 0, 'banned': 0, 'changed': 0,
}
commands = dotdict(commands)

hints = (
    '–í—ã –º–æ–∂–µ—Ç–µ <a href=https://t.me/AntiscamDatabaseBot?startgroup=new>–¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —Å–≤–æ–π —á–∞—Ç</a>,'
    '—á—Ç–æ–±—ã –æ–Ω –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–ª —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ —Å–∫–∞–º–º–µ—Ä–∞—Ö',
    '–°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ –º–æ–∂–Ω–æ –≤ <a href=tg://resolve?domain=GasdReport>–Ω–∞—à–µ–º —á–∞—Ç–µ –∂–∞–ª–æ–±</a>',
    '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –Ω–∞ <a href=https://t.me/AntiScamRoblox>–Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ</a>',
    '–ü—Ä–æ–ø–∞–¥–∞—é—Ç –∫–Ω–æ–ø–∫–∏ –≤ –±–æ—Ç–µ? –ü—Ä–æ–ø–∏—à–∏—Ç–µ /start',
    '–°—Ç–∞–≤—å—Ç–µ <code>‚ñ≥</code> –≤ —Å–≤–æ–π –Ω–∏–∫, –µ—Å–ª–∏ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –±–æ—Ä—å–±—É —Å–æ —Å–∫–∞–º–æ–º',
    '–ó–∞—Ö–æ–¥–∏—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ <a href=https://t.me/YozhChat>—á–∞—Ç–µ –Å–∂–∏–∫–æ–≤</a>',
    '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ <a href=https://t.me/addemoji/AntiscamBaza>–Ω–∞—à–∏ —ç–º–æ–¥–∑–∏</a>',
    '–£ –Ω–∞—Å –µ—Å—Ç—å <a href=https://t.me/GasdChat>—á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è</a>',
)

logging.basicConfig(level=logging.INFO)

for i in sqlite_start_commands:
    sql_edit(i, ())
    
userbot = Client("papaburger", api_id=—Ç–≤–æ–π –∞–ø–∏ –∞–π–¥–∏, api_hash='—Ç–≤–æ–π –∞–ø–∏ —Ö–µ—à')

flyer = Flyer('FL-nQnelI-FowwzW-QgoiEH-vfnoBL')


apps = [
    Client("gasd_bot", api_id=—Ç–≤–æ–π –∞–ø–∏ –∞–π–¥–∏, api_hash='—Ç–≤–æ–π –∞–ø–∏ —Ö–µ—à', bot_token=API_TOKEN),

]

for app in apps:
    
    app.sleep_threshold = 2
    app.parse_mode = ParseMode.HTML
    
    async def bot_id():
        return (await app.get_me()).id
    
    async def get_user_id(userid):
        
        try:
            person = await app.get_users(userid)
            userid = person.id
        except Exception as e:
            await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –≤ get_user_id({userid})\n\n{e}')
            pass
        
        return userid
    
    
    async def check_if_a_user(message):
        
        if message.chat.type == ChatType.PRIVATE:
            dm_state = sql_select(f"SELECT active FROM users WHERE id = {message.from_user.id}")
            
            if dm_state:
                if dm_state[0][0] == 1:
                    return True
                else:
                    sql_edit('UPDATE users SET active = 1 WHERE id == ?;', (message.chat.id,))
            else:
                sql_edit('INSERT INTO users VALUES(?, ?);', (message.from_user.id, 1,))
        
        elif message.chat.type == ChatType.SUPERGROUP \
                or message.chat.type == ChatType.GROUP:
            group_state = sql_select(f"SELECT * FROM groups WHERE id = {message.chat.id}")
            
            if group_state:
                return True
            else:
                sql_edit('INSERT INTO groups VALUES(?, ?, ?, ?, ?);', (message.chat.id, 1, -1, 1, 1))
        
        else:
            
            return
    
    
    async def log(text):
        return await app.send_message(-1001652069822, text)
    
    
    async def scam_chances(person, scam_chance):
        
        if person.id < 6000000000:
            scam_chance -= 5
        
        if person.username:
            scam_chance -= 5
        
        if person.is_scam:
            scam_chance += 5
        
        if person.is_premium:
            scam_chance -= 10
        
        try:
            channel_status = await app.get_chat_member(chat_id=-1001513425824, user_id=person.id)
            group_status = await app.get_chat_member(chat_id=-1001740473921, user_id=person.id)

            if channel_status.status != ChatMemberStatus.LEFT and group_status.status != ChatMemberStatus.LEFT:
                return True
        
        except Exception:
            pass
        
        for symbol in support_symbols:
            if symbol in person.first_name or person.last_name and symbol in person.last_name:
                scam_chance -= 5
                break
        
        if '#–≥–∞–∑–¥—Å–∏–ª–∞' in person.first_name.lower() or person.last_name and \
                '#–≥–∞–∑–¥—Å–∏–ª–∞' in person.last_name.lower():
            scam_chance -= 5
        
        if not person.photo:
            scam_chance += 5
        
        if '–≥–∞—Ä–∞–Ω—Ç' in person.first_name.lower() or person.last_name and \
                '–≥–∞—Ä–∞–Ω—Ç' in person.last_name.lower():
            scam_chance += 2
        
        if 'garant' in person.first_name.lower() or person.last_name and \
                'garant' in person.last_name.lower():
            scam_chance += 3
        
        if '#–≥–∞–∑–¥—Ö—É–π–Ω—è' in person.first_name.lower() or person.last_name and \
                '#–≥–∞–∑–¥—Ö—É–π–Ω—è' in person.last_name.lower():
            scam_chance += 14
        
        for symbol in ['[RT]', 'RT', '‚Ñùùïã', '·¥ø·µÄ', 'üÖ°üÖ£', '‚ìá‚ìâ', 'ùíìùíï', 'ùê´ùê≠', 'ùï£ùï•', 'ùöõùöù', ' Ä·¥õ', ' ≥·µó',
                       '·ñáT', 'üá∑ üáπ', 'üÖÅüÖÉ', 'üÜÅüÜÉ', 'ùò≥ùìΩ', 'Â∞∫„Ñí', '·ã™·çï', '·èí·é¢', ' Ä‚≤ß', '–†–¢',
                       's·¥Ä', 'ùïäùî∏', 'SA', 'ùêíùêÄ', '’è·ó©', 'ùë∫ùë®', '#SA', ]:
            if symbol.lower() in person.first_name.lower() or person.last_name and \
                    symbol in person.last_name.lower():
                scam_chance += 10
                break
        
        if scam_chance > 99:
            scam_chance = 99
        
        return scam_chance
    
    
    async def check_sub(msg):
        
        if not await flyer.check(msg.from_user.id):
            return False
        else:
            return True
        
        # if await bot_id() != 6066255260:
        #     return True
        #
        # our_group = await app.get_chat(report_group)
        # our_channel = await app.get_chat(channel)
        #
        # keyboard = InlineKeyboardMarkup(
        #     [[InlineKeyboardButton("–ù–ê–® –ö–ê–ù–ê–õ üì£", url=f"tg://resolve?domain={our_channel.username}"),
        #       InlineKeyboardButton("–ì–†–£–ü–ü–ê –ñ–ê–õ–û–ë üí¨", url=f"tg://resolve?domain={our_group.username}")],
        #      [InlineKeyboardButton('–ì–û–¢–û–í–û ‚úÖ', callback_data=action)]])
        #
        # try:
        #
        #     channel_status = await app.get_chat_member(chat_id=-1001513425824, user_id=msg.from_user.id)
        #     group_status = await app.get_chat_member(chat_id=-1001740473921, user_id=msg.from_user.id)
        #
        #     if channel_status.status != ChatMemberStatus.LEFT and group_status.status != ChatMemberStatus.LEFT:
        #         return True
        #
        #     else:
        #         kb = []
        #         sub_to_text = '–Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –Ω–∞—à—É –≥—Ä—É–ø–ø—É'
        #
        #         if channel_status.status == ChatMemberStatus.LEFT:
        #             kb.append(InlineKeyboardButton(
        #                 "–ù–ê–® –ö–ê–ù–ê–õ üì£", url=f"tg://resolve?domain={our_channel.username}"))
        #             sub_to_text = '–Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª'
        #
        #         if group_status.status == ChatMemberStatus.LEFT:
        #             kb.append(InlineKeyboardButton(
        #                 "–ì–†–£–ü–ü–ê –ñ–ê–õ–û–ë üí¨", url=f"tg://resolve?domain={our_group.username}"))
        #
        #             if kb:
        #                 sub_to_text = '–Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –Ω–∞—à—É –≥—Ä—É–ø–ø—É'
        #             else:
        #                 sub_to_text = '–Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É –∂–∞–ª–æ–±'
        #
        #         keyboard = InlineKeyboardMarkup([kb, [InlineKeyboardButton('–ì–û–¢–û–í–û ‚úÖ', callback_data=action)]])
        #
        #         await sent.edit(
        #             f"{msg.from_user.mention}, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è {sub_to_text} üëá",
        #             reply_markup=keyboard)
        #         await app.send_message(DIMA, f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞\n\n{sub_to_text}')
        #         return False
        #
        # except errors.UserNotParticipant:
        #
        #     await sent.edit(
        #         f"{msg.from_user.mention}, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à —á–∞—Ç –∏ –∫–∞–Ω–∞–ª üëá",
        #         reply_markup=keyboard)
        #     await app.send_message(DIMA, f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:\n\nUserNotParticipant')
        #     return False
        #
        # except Exception as e:
        #
        #     await sent.edit(
        #         f"{msg.from_user.mention}, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à —á–∞—Ç –∏ –∫–∞–Ω–∞–ª üëá",
        #         reply_markup=keyboard)
        #
        #     await app.send_message(chat_id=1032156461, text=f'ü™¢ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}')
        #     return False
    
    
    async def new_search(userid):
        user_state = sql_select(f"SELECT * FROM net WHERE id = {userid}")
        
        if not user_state:
            sql_edit(f'INSERT INTO net VALUES(?,?,?,?,?,?,?,?,?);',
                     (userid, 1, "Bio hasn't been set yet ‚òÉÔ∏è", "None ü¶õ", "‚ùì", None, 0, 0, 0))
            return sql_select(f"SELECT * FROM net WHERE id = {userid}")
        if user_state:
            sql_edit(f'UPDATE net SET searches=searches+1 WHERE id = {userid};', ())
            return sql_select(f"SELECT * FROM net WHERE id = {userid}")
    
    
    async def add_to_net(userid):
        user_state = sql_select(f"SELECT * FROM net WHERE id = {userid}")
        
        if not user_state:
            sql_edit(f'INSERT INTO net VALUES(?,?,?,?,?,?,?,?,?,?,?);',
                     (userid, 1, "Bio hasn't been set yet ‚òÉÔ∏è", "None ü¶õ", "‚ùì", None, 0, 0, 0, 2, 10))
            return sql_select(f"SELECT * FROM net WHERE id = {userid}")
        else:
            return user_state
    
    
    async def check_person_by_id(person):
        
        try:
            
            user_state = await new_search(person.id)
            country = get_country(user_state[0][3])
            if not country:
                country = f' <a href=https://t.me/AntiScamRoblox/432>–ù–µ –∑–∞–¥–∞–Ω–∞ {random.choice(lol)}</a>'
            
            _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {person.id}")
            
            if _fetchall_mms:
                await update_stats(person)
                
                popularity = sql_select(f"SELECT * FROM daily_searches "
                                        f"WHERE id={person.id}")
                
                if not popularity:
                    sql_edit(f'INSERT INTO daily_searches VALUES(?, ?)', (person.id, 1))
                else:
                    sql_edit(f'UPDATE daily_searches SET searches=searches+1 '
                             f'WHERE id={person.id}', ())
                connection.commit()
                
                return f'''
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {person.mention} [<code>{person.id}</code>]
<a href={themes['default']['mm']}>\u200B</a>
üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: –ì–∞—Ä–∞–Ω—Ç ‚úÖ
<a href=https://t.me/AntiScamRoblox/301>‚ùì –ö—Ç–æ —Ç–∞–∫–æ–π –≥–∞—Ä–∞–Ω—Ç?</a>

üì£ <b>–ö–∞–Ω–∞–ª –≥–∞—Ä–∞–Ω—Ç–∞</b>: {user_state[0][4]}
üåé <b>–°—Ç—Ä–∞–Ω–∞</b>: {country}
üå¥ <b>–¢–µ–≥:</b> @{person.username}
üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: {user_state[0][8]}

üîç –ò—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑
üóì –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {await get_date()}'''
            
            _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {person.id}")
            
            if _fetchall_admins:
                
                if person.id == 1032156461:
                    role = 'üí™üî• –ü–ê–ü–ê'
                elif _fetchall_admins[0][2] == 0:
                    role = 'üçºüë∂ –°—Ç–∞–∂—ë—Ä'
                elif _fetchall_admins[0][2] == 1:
                    role = 'üëãü§ì –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
                elif _fetchall_admins[0][2] == 2:
                    role = 'üî•ü•∏ –î–∏—Ä–µ–∫—Ç–æ—Ä'
                elif _fetchall_admins[0][2] == 3:
                    role = 'üèÜüòé –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç'
                else:
                    role = '‚ùì‚ùì –î–æ–ª–±–æ—ë–±'
                
                await update_stats(person)
                return f'''
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {person.mention} [<code>{person.id}</code>]
<a href={themes['default']['staff']}>\u200B</a>
üíô –ü–µ—Ä—Å–æ–Ω–∞–ª <a href=AntiScamDatabaseBot.t.me>GASD</a>
üìä {role} | ‚ö†Ô∏è{_fetchall_admins[0][1]} | ‚úÖ{_fetchall_admins[0][3]}

üì£ <b>–ö–∞–Ω–∞–ª –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞</b>: {user_state[0][4]}
üåé <b>–°—Ç—Ä–∞–Ω–∞</b>: {country}

üîç –ò—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑
üóì –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {await get_date()}'''
            
            if user_state[0][6] > 0:
                await update_stats(person)
                
                popularity = sql_select(f"SELECT * FROM daily_searches WHERE id={person.id}")
                
                if not popularity:
                    sql_edit(f'INSERT INTO daily_searches VALUES(?, ?)', (person.id, 1))
                else:
                    sql_edit(f'UPDATE daily_searches SET searches=searches+1 WHERE id={person.id}', ())
                
                scam_chance = await scam_chances(person, 36)
                
                return f'''
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {person.mention} [<code>{person.id}</code>]
<a href={themes['default']['trusted']}>\u200B</a>
üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: –ü—Ä–æ–≤–µ—Ä–µ–Ω(–∞) –≥–∞—Ä–∞–Ω—Ç–æ–º {(await app.get_users(user_state[0][6])).mention} ‚úÖ
<a href=https://t.me/AntiScamRoblox/301>‚ùì –ö—Ç–æ —Ç–∞–∫–æ–π –≥–∞—Ä–∞–Ω—Ç?</a>

‚ùì –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞: {scam_chance}%
üåé <b>–°—Ç—Ä–∞–Ω–∞</b>: {country}
üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: {user_state[0][8]}

üîç –ò—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑
üóì –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {await get_date()}'''
            
            _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {person.id}")
            
            if _fetchall_scammers:
                _fetchall_scammers[0][3].replace('ReportRoblox', 'GasdReport')
                await update_stats(person)
                
                if _fetchall_scammers[0][2] == '–°–ö–ê–ú–ú–ï–† ‚ö†':
                    return f'''
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {person.mention} [<code>{person.id}</code>]
<a href={themes['default']['scam']}>\u200B</a>
üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: {_fetchall_scammers[0][2]}
‚ùì –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞: 99%
üìö <b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: {_fetchall_scammers[0][3]}

üåé <b>–°—Ç—Ä–∞–Ω–∞</b>: {country}

üîç –ò—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑
üóì –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {await get_date()}'''
                else:
                    
                    scam_chance = await scam_chances(person, 70)
                    
                    return f'''
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {person.mention} [<code>{person.id}</code>]
<a href={themes['default']['high_scam_chances']}>\u200B</a>
üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: {_fetchall_scammers[0][2]}
‚ùì –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞: {scam_chance}%
üìö <b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: {_fetchall_scammers[0][3]}

üåé <b>–°—Ç—Ä–∞–Ω–∞</b>: {country}

üîç –ò—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑
üóì –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {await get_date()}'''
            
            
            else:
                await update_stats(person)
                
                scam_chance = await scam_chances(person, 45)
                
                return f'''
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {person.mention} [<code>{person.id}</code>]
<a href={themes['default']['no_data']}>\u200B</a>
‚ùì –ß–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ! –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞: {scam_chance}%

üåé <b>–°—Ç—Ä–∞–Ω–∞</b>: {country}
üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: {user_state[0][8]}

<i>üëç –ë—É–¥—å—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã –∏ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –≥–∞—Ä–∞–Ω—Ç–æ–≤, –Ω–µ –≤–µ–¥–∏—Ç–µ—Å—å –Ω–∞ –æ–±–º–∞–Ω!</i>

üîç –ò—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑
üóì –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {await get_date()}'''
        
        except Exception as e:
            
            await app.send_message(1032156461,
                                   f'Got an error while trying to use "check_person_by_id".\n\n<pre>{e}</pre>')
            return


    async def update_stats(person):
        global the_most_recent_search
        the_most_recent_search = person.mention
    
    
    async def if_supports_gasd(person, chat_id):
        for symbol in support_symbols:
            if symbol in person.first_name or person.last_name and symbol in person.last_name:
                await app.send_message(chat_id,
                                       f'‚úÖ || {person.mention} <b>–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –±–æ—Ä—å–±—É —Å–æ —Å–∫–∞–º–æ–º</b>, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ –≤ –Ω–∏–∫ '
                                       f'—Å–∏–º–≤–æ–ª <code>{symbol}</code>\n======\n (<i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ <code>{symbol}</code>,'
                                       f' —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∫ —Å–µ–±–µ –≤ –Ω–∏–∫</i>)')
                break
    
    
    async def if_hedgehog(person, chat_id):
        if 'ü¶î' in person.first_name or person.last_name and 'ü¶î' in person.last_name:
            await app.send_message(chat_id,
                                   f'‚úÖ || {person.mention} <b>–ø—Ä–æ—Å—Ç–æ —ë–∂–∏–∫ ü¶î</b>, —ç—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞—á–∏—Ç, '
                                   f'–ø—Ä–æ—Å—Ç–æ –º–∏–ª—ã–π —ë–∂–∏–∫ :)\n\n–ó–∞–ª–µ—Ç–∞–π—Ç–µ –∫—Å—Ç–∞—Ç–∏ –≤ –Ω–∞—à '
                                   f'<a href=t.me/YozhChat>üî• –ï–∂–∏–Ω—ã–π –ß–∞—Ç</a>')
    
    async def admin_limits(message, cooldown):
        if not message.from_user:
            return False
        
        if message.from_user.id in adm_limits and adm_limits[message.from_user.id] + cooldown >= time.time():
            await message.reply(
                f'<b>‚ùå –ü–æ–¥–æ–∂–¥–∏—Ç–µ {round((adm_limits[str(message.from_user.id)] + cooldown) - time.time())} —Å–µ–∫—É–Ω–¥</b>',
                reply_markup=HIDE_KB)
            return False
        
        adm_limits[message.from_user.id] = time.time()
        return True
    
    
    @app.on_chat_join_request()
    async def trigger(_, update):
        
        mm_groups = (-1002101027116,)
        admin_groups = (-1002091856799, -1001652069822, -1001773900560)
        
        if update.chat.id in mm_groups:
            
            _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {update.from_user.id}")
            
            if _fetchall_mms:
                await update.approve()
                await app.send_message(update.from_user.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ üòè',
                                       reply_markup=HIDE_KB)
            else:
                await update.decline()
                await app.send_message(
                    update.from_user.id, '‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≥–∞—Ä–∞–Ω—Ç–∞–º –Ω–∞—à–µ–π –±–∞–∑—ã', reply_markup=HIDE_KB)
        
        elif update.chat.id in admin_groups:
            
            _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {update.from_user.id}")
            
            if _fetchall_admins:
                await update.approve()
                await app.send_message(update.from_user.id, '–ó–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ üëå',
                                       reply_markup=HIDE_KB)
            else:
                await update.decline()
                await app.send_message(
                    update.from_user.id, '–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º –Ω–∞—à–µ–π –±–∞–∑—ã', reply_markup=HIDE_KB)
    
    @app.on_message(filters.command('start', ["/"]) & filters.text)
    async def answer(_, message):
        
        commands.start += 1
        await check_if_a_user(message)
        
        await message.reply('üëã')
        await app.send_chat_action(message.chat.id, ChatAction.TYPING)
        
        if message.chat.type == ChatType.PRIVATE:
            await message.reply(
                text=f'<a href=https://telegra.ph/file/3b7d4756d4026a1915d4c.png>\u200B</a>\n'
                     f'<b>–ú—ã - <a href="t.me/AntiScamDatabaseBot">–ì–ê–ó–î</a>, '
                     "–ì–ª–æ–±–∞–ª—å–Ω–∞—è –ê–Ω—Ç–∏–°–∫–∞–º –ë–∞–∑–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è:</b>\n\n"
                     'ü§ì –ü—Ä–æ–≤–µ—Ä–∏–º —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–∫–∞–º\n'
                     'ü§† –ù–∞–π–¥—ë–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –≥–∞—Ä–∞–Ω—Ç–∞\n'
                     'ü§ï –ü–æ–º–æ–∂–µ–º —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞\n\n'
                     '‚ÑπÔ∏è <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º</i>',
                reply_markup=DEFAULT_KB)
            
        else:
            await message.reply(
                text=f'<a href=https://telegra.ph/file/3b7d4756d4026a1915d4c.png>\u200B</a>\n'
                     f'<b>–ú—ã - <a href="t.me/AntiScamDatabaseBot">–ì–ê–ó–î</a>, '
                     "–ì–ª–æ–±–∞–ª—å–Ω–∞—è –ê–Ω—Ç–∏–°–∫–∞–º –ë–∞–∑–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è:</b>\n\n"
                     'ü§ì –ü—Ä–æ–≤–µ—Ä–∏–º —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–∫–∞–º\n'
                     'ü§† –ù–∞–π–¥—ë–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –≥–∞—Ä–∞–Ω—Ç–∞\n'
                     'ü§ï –ü–æ–º–æ–∂–µ–º —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞\n\n'
                     '‚ÑπÔ∏è <i>–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –ø—Ä—è–º–æ –≤ —á–∞—Ç–µ, –æ—Ç–≤–µ—Ç—å—Ç–µ <b>—á–µ–∫</b> –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</i>',
                reply_markup=DEFAULT_KB)
        
        try:
            await app.delete_messages(message.chat.id, message.id)
        except MessageDeleteForbidden:
            await message.reply('<i>üå¥ –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç—É –Ω—É–∂–Ω–∞ –∞–¥–º–∏–Ω–∫–∞</i>')
        except Exception as e:
            await message.reply('<i>üå¥ –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç—É –Ω—É–∂–Ω–∞ –∞–¥–º–∏–Ω–∫–∞</i>')
            await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n<pre>{e}</pre>')
            
        await app.send_chat_action(message.chat.id, ChatAction.TYPING)
        await asyncio.sleep(1)
        
        if message.chat.type == ChatType.PRIVATE:
            await message.reply(
                '‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å–∫–∞–º\n\n'
                'üê≥ <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞</b> - –Ω–∞–ø–∏—à–∏—Ç–µ "<code>—á–µ–∫ @BrandAPI</code>" (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)',
                reply_markup=MAIN_KB)
        else:
            await message.reply('‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å–∫–∞–º')
        return
    
    @app.on_message(filters.command(
        ['unban', '—Ä–∞–∑–±–∞–Ω', '—Ä–∞–∑–±–∞–Ω–∏—Ç—å', '–∞–Ω–±–∞–Ω', 'unmute', '—Ä–∞–∑–º—É—Ç', '—Ä–∞–∑–º—É—Ç–∏—Ç—å', '–∞–Ω–º—É—Ç'],
        ["/", "!"]) & filters.text)
    async def answer(_, message):
        user_status = (await app.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)).status
        
        if user_status == ChatMemberStatus.OWNER or user_status == ChatMemberStatus.ADMINISTRATOR:
            if message.reply_to_message:
                person_to_unban = message.reply_to_message.from_user
            else:
                args = message.text.split()
                
                if len(args) < 2:
                    await message.reply('‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–∞–Ω–∏—Ç—å')
                    return
                else:
                    person_to_unban = (await app.get_chat_member(message.chat.id, args[1])).user
            
            try:
                await app.unban_chat_member(message.chat.id, person_to_unban.id)
                
                await message.reply(f'‚úÖ {person_to_unban.mention} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω')
            except ChatAdminRequired:
                await message.reply(f'‚ùå –î–∞–π—Ç–µ –º–Ω–µ –∞–¥–º–∏–Ω–∫—É, –±–µ–∑ –Ω–µ—ë —è –Ω–µ —Å–º–æ–≥—É —Ä–∞–∑–±–∞–Ω–∏—Ç—å')
            except Exception as e:
                await message.reply(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: <pre>{e}</pre>')
    
    @app.on_message(filters.command(['ban', '–±–∞–Ω'], ["/", "!"]) & filters.text)
    async def answer(_, message):
        user_status = (await app.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)).status
        
        if user_status == ChatMemberStatus.OWNER or user_status == ChatMemberStatus.ADMINISTRATOR:
            
            message.text = message.text.lower()
            args = message.text.split()
            
            bantime = None
            bantext = '–Ω–∞–≤—Å–µ–≥–¥–∞'
            
            if message.reply_to_message:
                person_to_ban = message.reply_to_message.from_user
                
                if len(args) > 1:
                    if args[1].endswith('m') or args[1].endswith('minutes') \
                            or args[1].endswith('–º') or args[1].endswith('–º–∏–Ω—É—Ç'):
                        bantime = timedelta(minutes=int(args[1][:-1]))
                        bantext = f'–Ω–∞ {args[1][:-1]} –º–∏–Ω—É—Ç'
                        
                    if args[1].endswith('h') or args[1].endswith('hours') \
                            or args[1].endswith('—á') or args[1].endswith('—á–∞—Å–æ–≤'):
                        bantime = timedelta(hours=int(args[1][:-1]))
                        bantext = f'–Ω–∞ {args[1][:-1]} —á–∞—Å–æ–≤'
                        
                    if args[1].endswith('d') or args[1].endswith('days') \
                            or args[1].endswith('–¥') or args[1].endswith('–¥–Ω–µ–π'):
                        bantime = timedelta(days=int(args[1][:-1]))
                        bantext = f'–Ω–∞ {args[1][:-1]} –¥–Ω–µ–π'
            else:
                if len(args) < 2:
                    await message.reply('‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å')
                    return
                else:
                    person_to_ban = (await app.get_chat_member(message.chat.id, args[1])).user
                    
                    if len(args) > 2:
                        if args[2].endswith('m') or args[2].endswith('minutes') \
                                or args[2].endswith('–º') or args[2].endswith('–º–∏–Ω—É—Ç'):
                            bantime = timedelta(minutes=int(args[2][:-2]))
                            bantext = f'–Ω–∞ {args[2][:-2]} –º–∏–Ω—É—Ç'
                        
                        if args[2].endswith('h') or args[2].endswith('hours') \
                                or args[2].endswith('—á') or args[2].endswith('—á–∞—Å–æ–≤'):
                            bantime = timedelta(hours=int(args[2][:-2]))
                            bantext = f'–Ω–∞ {args[2][:-2]} —á–∞—Å–æ–≤'
                        
                        if args[2].endswith('d') or args[2].endswith('days') \
                                or args[2].endswith('–¥') or args[2].endswith('–¥–Ω–µ–π'):
                            bantime = timedelta(days=int(args[2][:-2]))
                            bantext = f'–Ω–∞ {args[2][:-2]} –¥–Ω–µ–π'
            
            try:
                if bantime:
                    await app.ban_chat_member(message.chat.id, person_to_ban.id, datetime.now() + bantime)
                else:
                    await app.ban_chat_member(message.chat.id, person_to_ban.id)
            
                await message.reply(f'‚õî {person_to_ban.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω {bantext}')
            except ChatAdminRequired:
                await message.reply(f'‚ùå –î–∞–π—Ç–µ –º–Ω–µ –∞–¥–º–∏–Ω–∫—É, –±–µ–∑ –Ω–µ—ë —è –Ω–µ –º–æ–≥—É –±–∞–Ω–∏—Ç—å')
            except UserAdminInvalid:
                await message.reply(f'‚ùå –ù–µ–ª—å–∑—è –±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤')
            except Exception as e:
                await message.reply(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: <pre>{e}</pre>')
        else:
            await message.reply('‚ùå –í—ã –Ω–µ –∞–¥–º–∏–Ω –≤ —á–∞—Ç–µ')
            return
          
    @app.on_message(filters.command(['mute', '–º—É—Ç'], ["/", "!"]) & filters.text)
    async def answer(_, message):
        user_status = (await app.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)).status
        
        if user_status == ChatMemberStatus.OWNER or user_status == ChatMemberStatus.ADMINISTRATOR:
            
            message.text = message.text.lower()
            args = message.text.split()
            
            bantime = None
            bantext = '–Ω–∞–≤—Å–µ–≥–¥–∞'
            
            if message.reply_to_message:
                person_to_ban = message.reply_to_message.from_user
                
                if len(args) > 1:
                    if args[1].endswith('m') or args[1].endswith('minutes') \
                            or args[1].endswith('–º') or args[1].endswith('–º–∏–Ω—É—Ç'):
                        bantime = timedelta(minutes=int(args[1][:-1]))
                        bantext = f'–Ω–∞ {args[1][:-1]} –º–∏–Ω—É—Ç'
                        
                    if args[1].endswith('h') or args[1].endswith('hours') \
                            or args[1].endswith('—á') or args[1].endswith('—á–∞—Å–æ–≤'):
                        bantime = timedelta(hours=int(args[1][:-1]))
                        bantext = f'–Ω–∞ {args[1][:-1]} —á–∞—Å–æ–≤'
                        
                    if args[1].endswith('d') or args[1].endswith('days') \
                            or args[1].endswith('–¥') or args[1].endswith('–¥–Ω–µ–π'):
                        bantime = timedelta(days=int(args[1][:-1]))
                        bantext = f'–Ω–∞ {args[1][:-1]} –¥–Ω–µ–π'
            else:
                if len(args) < 2:
                    await message.reply('‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å')
                    return
                else:
                    person_to_ban = (await app.get_chat_member(message.chat.id, args[1])).user
                    
                    if len(args) > 2:
                        if args[2].endswith('m') or args[2].endswith('minutes') \
                                or args[2].endswith('–º') or args[2].endswith('–º–∏–Ω—É—Ç'):
                            bantime = timedelta(minutes=int(args[2][:-2]))
                            bantext = f'–Ω–∞ {args[2][:-2]} –º–∏–Ω—É—Ç'
                        
                        if args[2].endswith('h') or args[2].endswith('hours') \
                                or args[2].endswith('—á') or args[2].endswith('—á–∞—Å–æ–≤'):
                            bantime = timedelta(hours=int(args[2][:-2]))
                            bantext = f'–Ω–∞ {args[2][:-2]} —á–∞—Å–æ–≤'
                        
                        if args[2].endswith('d') or args[2].endswith('days') \
                                or args[2].endswith('–¥') or args[2].endswith('–¥–Ω–µ–π'):
                            bantime = timedelta(days=int(args[2][:-2]))
                            bantext = f'–Ω–∞ {args[2][:-2]} –¥–Ω–µ–π'
            
            try:
                if bantime:
                    await app.restrict_chat_member(
                        message.chat.id, person_to_ban.id,
                        ChatPermissions(can_send_messages=False), datetime.now() + bantime)
                else:
                    await app.restrict_chat_member(
                        message.chat.id, person_to_ban.id, ChatPermissions(can_send_messages=False))
            
                await message.reply(f'‚õî {person_to_ban.mention} –±—ã–ª –∑–∞–º—É—á–µ–Ω {bantext}')
            except ChatAdminRequired:
                await message.reply(f'‚ùå –î–∞–π—Ç–µ –º–Ω–µ –∞–¥–º–∏–Ω–∫—É, –±–µ–∑ –Ω–µ—ë —è –Ω–µ –º–æ–≥—É –º—É—Ç–∏—Ç—å')
            except UserAdminInvalid:
                await message.reply(f'‚ùå –ù–µ–ª—å–∑—è –º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤')
            except Exception as e:
                await message.reply(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: <pre>{e}</pre>')
        else:
            await message.reply('‚ùå –í—ã –Ω–µ –∞–¥–º–∏–Ω –≤ —á–∞—Ç–µ')
            return
    
    @app.on_message(filters.command(['del', '–¥–µ–ª'], ["/", ""]) & filters.text)
    async def answer(_, message):
        
        if not await admin_limits(message, 10):
            return
        
        _fetchall_admins = sql_select(f"SELECT status FROM admins WHERE id = {message.from_user.id}")
        
        if (_fetchall_admins and _fetchall_admins[0][0] > 0) or message.from_user.id == 1032156461:
            msg = message.text.split()
            
            if len(msg) > 1:
                
                msg[1] = await get_user_id(msg[1])
                
                try:
                    
                    _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
                    if _fetchall_scammers:
                        
                        sql_edit(f'DELETE FROM scammers WHERE id = {msg[1]}', ())
                        
                        try:
                            await app.send_message(msg[1], 'üëÄ –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –≤ –±–∞–∑–µ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞',
                                                   reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                                       text='–ß–µ–∫–Ω—É—Ç—å —Å–µ–±—è üîé',
                                                       callback_data=f'check {msg[1]}'
                                                   )]]))
                            commands.changed += 1
                        
                        except Exception as e:
                            await app.send_message(DIMA, f'‚õî –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n\n<pre>{e}</pre>')
                        
                        posted_message = await app.send_message(
                            -1001652069822,
                            f'–ê–¥–º–∏–Ω {message.from_user.mention} —É–¥–∞–ª–∏–ª —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –±–∞–∑—ã!\n\n'
                            f'#id{message.from_user.id} #—É–¥–∞–ª–µ–Ω–∏–µ_–∏–∑_–±–¥\n=============\n'
                            f'–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\nüÜî <code>{msg[1]}</code>\n'
                            f'<a href=tg://openmessage?user_id={msg[1]}>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>')
                        await message.reply(
                            f'<b>üëã | –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª '
                            f'<a href=tg://openmessage?user_id={msg[1]}>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã.</a></b>'
                            f'\n\n‚ÑπÔ∏è https://t.me/c/{str(posted_message.chat.id)[3:]}/{posted_message.id}')
                    
                    else:
                        await message.edit(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {msg[1]} –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö",
                                           reply_markup=HIDE_KB)
                except Exception as e:
                    
                    await message.edit("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫", reply_markup=HIDE_KB)
                    await message.edit(e, reply_markup=HIDE_KB)
            else:
                await message.edit("‚õî –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /del @onetimeusername", reply_markup=HIDE_KB)
                return

        else:
            await message.reply("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!", reply_markup=HIDE_KB)
            return
    
    @app.on_message(filters.command('–¢–µ—Ö –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öôÔ∏è', [""]) & filters.text)
    async def answer(_, message):
        if message.chat.type == ChatType.PRIVATE:
            await message.reply(f'‚öô {message.from_user.mention}, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:',
                                reply_markup=InlineKeyboardMarkup([
                                    [InlineKeyboardButton('–°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ üêû', callback_data='bugreport')],
                                    [InlineKeyboardButton('–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é üí°', callback_data='idea')],
                                    [InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ü¶îüí¨', callback_data='vouch')],
                                    [InlineKeyboardButton('–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É üò•', callback_data='gotatrouble')]]))
        else:
            await message.reply('‚ö†Ô∏è –î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º',
                                reply_markup=InlineKeyboardMarkup(
                                    [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ ‚û°Ô∏è', callback_data='dms')]]))
    
    
    @app.on_message(filters.command(["–ì–∞—Ä–∞–Ω—Ç—ã ‚ù§Ô∏è‚Äçüî•", "/mms"], ['']) & filters.text)
    async def answer(_, message):
        
        commands.mms += 1
        if message.from_user.id in banned:
            await message.reply('‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞')
            return
        
        banned.append(message.from_user.id)
        
        mms = sql_select(f"SELECT id FROM mms")
        buttons = []
        
        msg = await message.reply(f'‚è≥ {message.from_user.mention}, –∑–∞–≥—Ä—É–∂–∞–µ–º...\n\n‚ÑπÔ∏è {random.choice(hints)}')
        
        for mm in mms:
            user_state = await new_search(mm[0])
            
            try:
                person = await app.get_users(mm[0])
                buttons.append([InlineKeyboardButton(text=f' {person.first_name} | üîé {user_state[0][1]}',
                                                     callback_data=f'check {mm[0]}')])
            
            except Exception as e:
                await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≥–∞—Ä–∞–Ω—Ç–æ–≤\n\n{e}')
        
        buttons.append([InlineKeyboardButton('–ö–¢–û –¢–ê–ö–û–ô –ì–ê–†–ê–ù–¢? ü§ì', url='https://t.me/AntiScamRoblox/301')])
        buttons.append([InlineKeyboardButton("–°–¢–ê–¢–¨ –ì–ê–†–ê–ù–¢–û–ú ü¶î", callback_data="become mm")])
        
        await msg.edit(text='‚ù§Ô∏è‚Äçüî• –ù–∏–∂–µ —Å–ø–∏—Å–æ–∫ –≥–∞—Ä–∞–Ω—Ç–æ–≤ –Ω–∞—à–µ–π –±–∞–∑—ã, –∏–º –º–æ–∂–Ω–æ –¥–æ–≤–µ—Ä—è—Ç—å',
                       reply_markup=InlineKeyboardMarkup(buttons))
        banned.remove(message.from_user.id)
    
    @app.on_message(filters.command(["–í–æ–ª–æ–Ω—Ç—ë—Ä—ã üå¥", "/admins"], ['']) & filters.text)
    async def answer(_, message):
        commands.admins += 1
        
        if message.from_user.id in banned:
            await message.reply('‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞')
            return
        
        banned.append(message.from_user.id)
        
        admins = sql_select(f"SELECT id, status FROM admins")
        text = f'üí™ <b>–ê–¥–º–∏–Ω—ã –ì–ê–ó–î–∞ ({len(admins)} / 25):</b>\n'
        buttons = []
        
        msg = await message.reply(f'‚è≥ {message.from_user.mention}, –∑–∞–≥—Ä—É–∂–∞–µ–º...\n\n‚ÑπÔ∏è {random.choice(hints)}')
        
        for admin in admins:
            try:
                
                person = await app.get_users(admin[0])
                
                if admin[1] == 0:
                    role = 'üçºüë∂'
                elif admin[1] == 1:
                    role = 'üëãü§ì'
                elif admin[1] == 2:
                    role = 'üî•ü•∏'
                elif admin[1] == 3:
                    role = 'üèÜüòé'
                else:
                    role = '‚ùì‚ùì'
                
                buttons.append([InlineKeyboardButton(text=f'{role} {person.first_name}',
                                                     callback_data=f'check {admin[0]}')])
            
            except Exception as e:
                await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤\n\n{e}')
                pass
        
        buttons.append([InlineKeyboardButton("–ö–∞–∫ —Å—Ç–∞—Ç—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–º?", callback_data="become admin")])
        await msg.edit(text=text, reply_markup=InlineKeyboardMarkup(buttons))
        
        banned.remove(message.from_user.id)
    
    @app.on_message(filters.command(['–ü–æ–º–æ—â—å ü§ì', '/help'], ['']) & filters.text)
    async def answer(_, message):
        
        commands.help += 1
        
        await app.send_chat_action(message.chat.id, ChatAction.UPLOAD_VIDEO)
        await app.send_video(
            chat_id=message.chat.id,
            video='BAACAgIAAxkDAAEE8jlkqVpmXjQIgMTJyg-OY_6FKnWSGQAC-jMAAuQEUEn_RdEmWrw4pB4E',
            caption='''
–Ø - GASD üí™üß¨, –±–æ—Ç, –ø–æ–º–æ–≥–∞—é—â–∏–π –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ª—é–¥–µ–π –Ω–∞ —Å–∫–∞–º –∏ —Å–ª–∏–≤–∞—Ç—å —Å–∫–∞–º–º–µ—Ä–æ–≤.

–ù–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –º–æ–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üí† /start
- <i>–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, –µ—Å–ª–∏ –ø—Ä–æ–ø–∞–ª–∏ –∫–Ω–æ–ø–∫–∏</i>

üí† —á–µ–∫ (@—é–∑–µ—Ä –ò–õ–ò ID –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–≥–æ, –±–µ–∑ —Å–∫–æ–±–æ–∫)
- <i>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–∫–∞–º</i>

üí† —á–µ–∫ —è
- <i>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –°–ï–ë–Ø</i>

<b>–û—Å—Ç–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤ –º–µ–Ω—é</b>

–°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ - @GasdReport
                ''',
            reply_markup=DEFAULT_KB)
        return
    
    
    @app.on_message(filters.command(['FAQ ‚ùì', '/help'], ['']) & filters.text)
    async def answer(_, message):
        
        await message.reply('üíÅ‚Äç‚ôÇÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:', reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton('ü§î –ö—Ç–æ —Ç–∞–∫–æ–π –≥–∞—Ä–∞–Ω—Ç?', callback_data='faq 1')],
             [InlineKeyboardButton('üîç –ö–∞–∫ –Ω–∞–π—Ç–∏ –≥–∞—Ä–∞–Ω—Ç–∞?', callback_data='faq 2')],
             [InlineKeyboardButton('üõ° –ö–∞–∫ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º?', callback_data='faq 3')],
             [InlineKeyboardButton('‚úÖ –ö–∞–∫ —Å—Ç–∞—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º?', callback_data='faq 4')],
             [InlineKeyboardButton('üò° –ö–∞–∫ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞?', callback_data='faq 5')],
             [InlineKeyboardButton('‚åö –ö–æ–≥–¥–∞ –Ω–∞–±–æ—Ä –Ω–∞ –∞–¥–º–∏–Ω–æ–≤?', callback_data='faq 6')],
             [InlineKeyboardButton('üí∏ –ú–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å —Ä–æ–ª—å –≤ –±–∞–∑–µ?', callback_data='faq 7')],
             [InlineKeyboardButton('üí∞ –ú–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å —Å–Ω—è—Ç–∏–µ –∏–∑ –±–∞–∑—ã?', callback_data='faq 8')], ]
        ))
        return
    
    
    @app.on_message(filters.command(['–ù–µ –æ—Ñ—Ñ—Ç–æ–ø—å—Ç–µ'], [""]))
    async def action(_, message):
        if message.reply_to_message and message.chat.id == -1001740473921:
            _fetchall_admins = sql_select(f"SELECT id FROM admins WHERE id = {message.from_user.id}")
            
            if _fetchall_admins:
                try:
                    await app.restrict_chat_member(-1001740473921,
                                                   message.reply_to_message.from_user.id,
                                                   ChatPermissions(can_send_messages=False),
                                                   datetime.now() + timedelta(minutes=5))
                    await message.reply_to_message.reply(
                        '–≠—Ç–æ—Ç —á–∞—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Å–ª–∏–≤–∞ —Å–∫–∞–º–º–µ—Ä–æ–≤, '
                        '–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è —É –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —á–∞—Ç - @GasdChat\n\n'
                        '–ú—É—Ç –±—É–¥–µ—Ç —Å–Ω—è—Ç —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ ‚ù§Ô∏è',
                        reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                            'üå¥ –ß–∞—Ç –æ–±—â–µ–Ω–∏—è', url='https://t.me/+wxf_44fe5cE4MjY6')]]))
                    
                except Exception as e:
                    await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –≤ –º—É—Ç–µ –∑–∞ –æ—Ñ—Ñ—Ç–æ–ø\n\n<pre>{e}</pre>')
            else:
                await message.reply('<b>‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º</b>')
    
    @app.on_message(filters.command(['–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '/stats'], [""]) & filters.text)
    async def answer(_, message):
        
        if message.from_user.id in banned:
            await message.reply(
                f'<b>‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å!</b>\n'
                f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –∞ –∑–∞—Ç–µ–º –≤—ã–∑—ã–≤–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞.',
                reply_markup=HIDE_KB)
            return
        
        commands.stats += 1
        banned.append(message.from_user.id)
        
        global the_most_recent_search
        
        await message.reply(f'''
{message.from_user.mention}, –Ω–∏–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞:
<a href=https://telegra.ph/file/cff90a1e4873fe560010e.png>\u200B</a>
üö´ –°–∫–∞–º–º–µ—Ä–æ–≤ –≤ –±–∞–∑–µ: {sql_select("SELECT COUNT(id) from scammers;")[0][0]}
üëÅÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: {sql_select("SELECT COUNT(id) from users WHERE active=1;")[0][0]}

‚öñÔ∏è –ê–¥–º–∏–Ω–æ–≤: {sql_select("SELECT COUNT(id) from admins;")[0][0]}
üí∏ –ì–∞—Ä–∞–Ω—Ç–æ–≤: {sql_select("SELECT COUNT(id) from mms;")[0][0]}
üèÜÔ∏è –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö: {sql_select("SELECT COUNT(id) from net WHERE is_trusted > 0;")[0][0]}

üéâ –ë–æ—Ç —É–∂–µ –≤ {sql_select("SELECT COUNT(id) from groups;")[0][0]} –≥—Ä—É–ø–ø–∞—Ö

üîé –ü–æ–∏—Å–∫–æ–≤ –ø–æ –±–∞–∑–µ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: {sql_select("SELECT SUM(searches) from net WHERE searches > 0")[0][0]}
üå¥ –í –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –∏—Å–∫–∞–ª–∏: {the_most_recent_search}
        ''', reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton('–¢–æ–ø –ø–æ —Å–ª–∏–≤–∞–º üå¥', callback_data='top_reporters')],
            [InlineKeyboardButton('–¢–æ–ø –∞–¥–º–∏–Ω–æ–≤ üòé', callback_data='top_admins'),
             InlineKeyboardButton('–¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö üê±', callback_data='top_mms')]]))
        
        if message.from_user.id == DIMA:
            await message.reply(f'{commands}')
        banned.remove(message.from_user.id)
        return
    
    
    @app.on_message(filters.command(['check', '—á–µ–∫', '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å', 'chek'], ["/", ""]) & filters.text)
    async def answer(_, message):
        
        await add_to_net(message.from_user.id)
        
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        data = sql_select(f'SELECT free_checks FROM net WHERE id = {message.from_user.id}')
        
        if (data and data[0][0] > 0) or _fetchall_admins:
            
            sent = await message.reply(f'‚è≥ {message.from_user.mention}, –∑–∞–≥—Ä—É–∂–∞–µ–º...'
                                       f'<a href={themes["default"]["loading"]}>\u200B</a>\n\n‚ÑπÔ∏è {random.choice(hints)}')
            msg = message.text.split()
            commands.check += 1
            
            try:
            
                # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å
                
                if message.reply_to_message:
                    person = message.reply_to_message.from_user
                    
                elif len(msg) == 1:
                    
                    await sent.edit(
                        "<a href=https://telegra.ph/file/4af854abf55a4cd8eb52f.png>\u200B</a>"
                        f"–í–≤–µ–¥–∏—Ç–µ @—é–∑–µ—Ä–Ω–µ–π–º —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å!\n\n"
                        f"–ù–∞–ø—Ä–∏–º–µ—Ä:\n<pre>/check @onetimeusername</pre>")
                    return
                
                elif msg[1] in ('me', 'myself', '–º–∏', '–º–µ–Ω—è', '—è', '—Å–µ–±—è'):
                    person = message.from_user
                    
                else:
                    if msg[1].startswith('https://t.me/'):
                        msg[1] = str(msg[1][13:])
                    if msg[1].startswith('t.me/'):
                        msg[1] = str(msg[1][5:])
                    
                    msg[1] = re.sub('[^A-Za-z0-9_]', '', msg[1])
                    
                    if msg[1]:
                        person = await app.get_users(msg[1])
                    else:
                        return
                
                # –ø—Ä–æ–≤–µ—Ä—è–µ–º
                if message.chat.type == ChatType.PRIVATE:
                    if not await check_sub(message):
                        return
                
                res = await check_person_by_id(person)
                
                if res:
                    if sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}"):
                        kb = InlineKeyboardMarkup([[InlineKeyboardButton(
                            text='–í—ã–Ω–µ—Å—Ç–∏ –∏–∑ –±–∞–∑—ã ‚ùå',
                            callback_data=f'del {person.id}')]])
                    else:
                        if message.from_user.id == person.id:
                            
                            scamdata = sql_select(f"SELECT * FROM scammers WHERE id = {message.from_user.id}")
                            netdata = sql_select(f"SELECT * FROM net WHERE id = {message.from_user.id}")
                            
                            if scamdata and netdata and netdata[0][7] == 0:
                                
                                if (scamdata[0][3].lower().startswith('–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–∞–º –≥—Ä—É–ø') and len(scamdata[3]) < 64)\
                                        or scamdata[0][3].lower().startswith('–æ—Ç–∫–∞–∑ –æ—Ç –≥–∞—Ä–∞–Ω—Ç–∞') and len(scamdata[3]) < 64:
                                    
                                    kb = InlineKeyboardMarkup(
                                        [[InlineKeyboardButton(text='‚ùå –í–´–ô–¢–ò –ò–ó –ë–ê–ó–´', callback_data=f'in_dev')]])
                                
                                else:
                                    kb = InlineKeyboardMarkup(
                                        [
                                            [InlineKeyboardButton(text='‚Ñπ –ü–†–û–§–ò–õ–¨ ‚ÑπÔ∏è', user_id=message.from_user.id),
                                             InlineKeyboardButton(text='‚öñÔ∏è –ê–ü–ü–ï–õ–Ø–¶–ò–Ø ‚öñÔ∏è',
                                                                  callback_data=f'appeal {message.from_user.id}')],
                                            [InlineKeyboardButton(text='üîç –ü–†–û–ë–ò–¢–¨ –°–ö–ê–ú–ú–ï–†–ê üîç',
                                                                  url='https://t.me/MephEyeBot?start=1032156461')]
                                        ])
                                    
                            else:
                                kb = InlineKeyboardMarkup(
                                    [
                                        [InlineKeyboardButton(text='‚Ñπ –ü–†–û–§–ò–õ–¨ ‚ÑπÔ∏è', user_id=message.from_user.id),
                                         InlineKeyboardButton(text='‚öñÔ∏è –ê–ü–ü–ï–õ–Ø–¶–ò–Ø ‚öñÔ∏è',
                                                              callback_data=f'appeal {message.from_user.id}')],
                                        [InlineKeyboardButton(text='üîç –ü–†–û–ë–ò–¢–¨ –°–ö–ê–ú–ú–ï–†–ê üîç',
                                                              url='https://t.me/MephEyeBot?start=1032156461')]
                                    ])
                                
                        else:
                            kb = InlineKeyboardMarkup([
                                [InlineKeyboardButton(text='‚Ñπ –ü–†–û–§–ò–õ–¨ ‚ÑπÔ∏è', user_id=person.id)],
                                [InlineKeyboardButton(text='üîç –ü–†–û–ë–ò–¢–¨ –°–ö–ê–ú–ú–ï–†–ê üîç',
                                                      url='https://t.me/MephEyeBot?start=1032156461')]])
                    
                    try:
                        await sent.edit(res, reply_markup=kb)
                    except errors.ButtonUserPrivacyRestricted:
                        await sent.edit(res, reply_markup=AS_REPORT_KB)
                    
                    await if_hedgehog(person, message.chat.id)
                    await if_supports_gasd(person, message.chat.id)
                    
                    sql_edit(
                        f'UPDATE net SET free_checks = free_checks - 1 WHERE id = {message.from_user.id}', ())
                    
            except errors.UsernameInvalid:
                await sent.edit('''
‚ùå <b>–¢–µ–ª–µ–≥—Ä–∞–º –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —é–∑–µ—Ä–Ω–µ–π–º"</b>

–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–º–µ–Ω–∏–ª @—é–∑–µ—Ä–Ω–µ–π–º''',
                                reply_markup=AS_REPORT_KB)
                
            except errors.PeerIdInvalid:
                await sent.edit('''
‚ùå <b>–¢–µ–ª–µ–≥—Ä–∞–º –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: "–ù–µ–∑–Ω–∞–∫–æ–º—ã–π —á–∞—Ç"</b>

–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∞–π–¥–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç.–∫. –±–æ—Ç –µ–≥–æ –Ω–µ –≤–∏–¥–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –ø–æ ID''',
                                reply_markup=AS_REPORT_KB)
            
            except errors.UsernameNotOccupied:
                await sent.edit('''
‚ùå <b>–¢–µ–ª–µ–≥—Ä–∞–º –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: "–Æ–∑–µ—Ä–Ω–µ–π–º –Ω–µ –∑–∞–Ω—è—Ç"</b>

–¢–∞–∫–æ–≥–æ —é–∑–µ—Ä–Ω–µ–π–º–∞ –Ω–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –¥–æ–ø—É—Å—Ç–∏–ª–∏ –ª–∏ –≤—ã –æ—à–∏–±–æ–∫ –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∏ –Ω–µ —Å–º–µ–Ω–∏–ª –ª–∏ —Å–∫–∞–º–º–µ—Ä —Ç–µ–≥''',
                                reply_markup=AS_REPORT_KB)
        
            except errors.FloodWait as e:
                
                minutes = round(e.value / 60)
                
                if minutes < 59:
                    
                    ending = ''
                    if minutes % 10 == 1:
                        ending = '—É'
                    elif minutes % 10 in (2, 3, 4):
                        ending = '—ã'
                
                    await sent.edit(f'‚ùå <b>–ë–æ—Ç—É –¥–∞–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ª—é–¥–µ–π.</b> '
                                    f'–°–µ–π—á–∞—Å –±–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫—Ç–æ —á–∞—Å—Ç–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º\n\n'
                                    f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ~{minutes} –º–∏–Ω—É—Ç{ending}',
                                    reply_markup=AS_REPORT_KB)
                
                else:
                    
                    hours = round(minutes / 60)
                    
                    ending = '–æ–≤'
                    if hours % 10 == 1:
                        ending = ''
                    elif hours % 10 in (2, 3, 4):
                        ending = '–∞'
                    
                    await sent.edit(f'‚ùå <b>–ë–æ—Ç—É –¥–∞–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ª—é–¥–µ–π.</b> '
                                    f'–°–µ–π—á–∞—Å –±–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫—Ç–æ —á–∞—Å—Ç–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º\n\n'
                                    f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ~{hours} —á–∞—Å{ending}',
                                    reply_markup=AS_REPORT_KB)
                
            except Exception as e:
                await sent.edit('‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É!')
                await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –≤ /check\n\n<pre>{e}</pre>')
        else:
            await message.reply(f'<b>‚åõ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤ –¥–µ–Ω—å (10/10)</b>')
        
    
    @app.on_message(filters.command(['/close'], [""]) & filters.text)
    async def answer(_, message):
        
        peer = await app.resolve_peer(-1001949170455)
        try:
            await app.invoke(EditForumTopic(channel=peer, topic_id=message.reply_to_message_id, title=f'üî¥', closed=True))
        except Exception as e:
            await message.reply(f'{e}')
        await app.send_message(
            -1001949170455,
            '<a href=https://telegra.ph/file/97faf8bb06675ffc3e764.png>\u200B</a>'
            f'<b>{message.from_user.mention} –∑–∞–∫—Ä—ã–ª —Ç–æ–ø–∏–∫.</b>\n\n'
            f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º! –ù–∞—à –±–æ—Ç - @AntiScamDatabaseBot',
            reply_to_message_id=message.reply_to_message_id)
        
    
    @app.on_message(filters.command(['/me', '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'], [""]) & filters.text)
    async def answer(_, message):
        
        if message.chat.type == ChatType.PRIVATE:
            if not await check_sub(message):
                return
        
        sent = await message.reply('üòé')
        commands.me += 1
        
        user_state = await add_to_net(message.from_user.id)
        _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {message.from_user.id}")
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        
        country = get_country_emojie(user_state[0][3])
        if not country:
            country = 'üåè'
        
        keyboard = [
            [InlineKeyboardButton('üîé –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–±—è', callback_data=f'check {message.from_user.id}')],
            [InlineKeyboardButton('üì£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª', callback_data='channel')],
            [InlineKeyboardButton(f'{country} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É', callback_data='set country')],
            [InlineKeyboardButton('‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º', callback_data='howto')],
        ]
        
        if _fetchall_mms or _fetchall_admins:
            keyboard.append([InlineKeyboardButton("‚≠ê –°–ö–í–ê–î –ì–ê–ó–î–ê ‚≠ê", callback_data='squad')])
        
        keyboard.append([InlineKeyboardButton("üå¥ –ù–∞—à –ß–∞—Ç –û–±—â–µ–Ω–∏—è", url='https://t.me/+goO620eaHQo0NjMy')])
        
        await sent.edit(f'‚ÑπÔ∏è {message.from_user.mention}, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n\n'
                        f'üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: {user_state[0][8]}\n'
                        f'üîé –í–∞—Å –∏—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑',
                        reply_markup=InlineKeyboardMarkup(keyboard))
        
        return
    
    
    # @app.on_message(filters.command(['scam', '—Å–∫–∞–º'], ["/", "!", "$", ".", ","]) & filters.text)
    # async def answer(_, message):
    #
    #     if adm_limits.get(str(message.from_user.id)) and adm_limits[str(message.from_user.id)] + 15 >= time.time():
    #         await message.reply(
    #             f'<b>‚ùå –ü–æ–¥–æ–∂–¥–∏—Ç–µ {round((adm_limits[str(message.from_user.id)] + 15) - time.time())} —Å–µ–∫—É–Ω–¥</b>',
    #             reply_markup=HIDE_KB)
    #         return
    #
    #     _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
    #     msg = message.text.split(" ", 2)
    #
    #     if (_fetchall_admins != [] and _fetchall_admins[0][2] > 0) or message.from_user.id == 1032156461:
    #
    #         if 2 > len(msg):
    #             await message.reply("<pre>/scam üÜî –û–ø–∏—Å–∞–Ω–∏–µ</pre>", reply_markup=HIDE_KB)
    #         else:
    #
    #             adm_limits[str(message.from_user.id)] = time.time()
    #
    #             msg[1] = get_user_id(msg[1])
    #
    #             _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {msg[1]}")
    #             if _fetchall_mms:
    #                 account = await app.get_users(msg[1])
    #                 await message.reply(f"ü§î {account.mention} [{msg[1]}] —è–≤–ª—è–µ—Ç—Å—è –≥–∞—Ä–∞–Ω—Ç–æ–º –Ω–∞—à–µ–π –±–∞–∑—ã!",
    #                                     reply_markup=HIDE_KB)
    #                 return
    #
    #             try:
    #
    #                 _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
    #
    #                 if not _fetchall_scammers:
    #
    #                     try:
    #
    #                         sql_edit(f'INSERT INTO scammers VALUES(?, ?, ?, ?);',
    #                                  (msg[1], 0, 'Under Review', msg[2]))
    #
    #                         await message.reply(
    #                             'ü§î –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø—É—Ç–∞—Ü–∏—é',
    #                             reply_markup=InlineKeyboardMarkup([
    #                                 [InlineKeyboardButton(
    #                                     '–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è ‚ö†',
    #                                     callback_data=f'reputation 0 {msg[1]} {message.from_user.id}')],
    #                                 [InlineKeyboardButton(
    #                                     '–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä ‚ö†',
    #                                     callback_data=f'reputation 1 {msg[1]} {message.from_user.id}')],
    #                                 [InlineKeyboardButton(
    #                                     '–°–ö–ê–ú–ú–ï–† ‚ö†',
    #                                     callback_data=f'reputation 2 {msg[1]} {message.from_user.id}')],
    #                                 [InlineKeyboardButton(
    #                                     '–ü–µ—Ç—É—Ö üêì',
    #                                     callback_data=f'reputation 3 {msg[1]} {message.from_user.id}')],
    #                             ]))
    #
    #                     except Exception as exc:
    #                         await message.reply(exc)
    #                         await app.send_message(DIMA, f'ü¶ç –û—à–∏–±–∫–∞ –∏–∑ /scam: {exc}')
    #                         connection.rollback()
    #
    #
    #                 else:
    #                     keyboard = [
    #                         [InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é üîÅ',
    #                                               callback_data=f'change {msg[1]} {message.from_user.id}')],
    #                         [InlineKeyboardButton('–î–æ–ø–æ–ª–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ ‚ûï',
    #                                               callback_data='in_dev')]
    #                     ]
    #
    #                     await message.reply(f"ü§î –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {msg[1]} —É–∂–µ –∑–∞–Ω–µ—Å—ë–Ω –≤ –Ω–∞—à—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!\n\n"
    #                                         f"üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: {_fetchall_scammers[0][2]}"
    #                                         f"\n\nüìö <b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: <code>{_fetchall_scammers[0][3]}</code>",
    #                                         reply_markup=InlineKeyboardMarkup(keyboard))
    #
    #             except Exception as e:
    #                 await message.reply(
    #                     e, reply_markup=HIDE_KB
    #                 )
    #     elif _fetchall_admins[0][2] == 0:
    #
    #         tutor = sql_select(f'SELECT * FROM admins WHERE intern = {message.from_user.id}')
    #
    #         if tutor:
    #
    #             msg[1] = get_user_id(msg[1])
    #
    #             await message.reply(
    #                 'ü§î –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø—É—Ç–∞—Ü–∏—é',
    #                 reply_markup=InlineKeyboardMarkup([
    #                     [InlineKeyboardButton(
    #                         '–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è ‚ö†',
    #                         callback_data=f'tutor 0 {msg[1]} {message.from_user.id}')],
    #                     [InlineKeyboardButton(
    #                         '–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä ‚ö†',
    #                         callback_data=f'tutor 1 {msg[1]} {message.from_user.id}')],
    #                     [InlineKeyboardButton(
    #                         '–°–ö–ê–ú–ú–ï–† ‚ö†',
    #                         callback_data=f'tutor 2 {msg[1]} {message.from_user.id}')],
    #                     [InlineKeyboardButton(
    #                         '–ü–µ—Ç—É—Ö üêì',
    #                         callback_data=f'tutor 3 {msg[1]} {message.from_user.id}')],
    #                 ]))
    #         else:
    #             await message.reply("‚õî <b>–£ –≤–∞—Å –Ω–µ—Ç –∫—É—Ä–∞—Ç–æ—Ä–∞!</b> –ù–∞–ø–∏—à–∏—Ç–µ @Anya_its_here", reply_markup=HIDE_KB)
    #     else:
    #         await message.reply("‚õî <b>–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!</b>", reply_markup=HIDE_KB)
    
    @app.on_message(filters.command(['scam', '—Å–∫–∞–º'], ["/", "!", "$", ".",]) & filters.text)
    async def answer(_, message):
        
        try:
            if adm_limits[str(message.from_user.id)] + 15 >= time.time():
                await message.reply(
                    f'<b>‚ùå –ü–æ–¥–æ–∂–¥–∏—Ç–µ {round((adm_limits[str(message.from_user.id)] + 15) - time.time())} —Å–µ–∫—É–Ω–¥</b>',
                    reply_markup=HIDE_KB)
                return
        except Exception:
            pass
        
        adm_limits[str(message.from_user.id)] = time.time()
        
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        
        if (_fetchall_admins and _fetchall_admins[0][2] > 0) or message.from_user.id == 1032156461:
            msg = message.text.split(" ", 2)
            
            if 2 > len(msg):
                await message.reply("üëÄ –í–≤–µ–¥–∏—Ç–µ <code>/scam (ID | @—é–∑–µ—Ä) (–û–ø–∏—Å–∞–Ω–∏–µ)</code>", reply_markup=HIDE_KB)
                
            else:
                
                try:
                    account = await app.get_users(msg[1])
                    msg[1] = account.id
                    
                except Exception as e:
                    account = None
                    pass
                
                _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {msg[1]}")
                
                if _fetchall_mms:
                    if account:
                        await message.reply(f"ü§î {account.mention} [{msg[1]}] —è–≤–ª—è–µ—Ç—Å—è –≥–∞—Ä–∞–Ω—Ç–æ–º –Ω–∞—à–µ–π –±–∞–∑—ã!",
                                            reply_markup=HIDE_KB)
                    else:
                        await message.reply(f"ü§î –≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ [{msg[1]}] —è–≤–ª—è–µ—Ç—Å—è –≥–∞—Ä–∞–Ω—Ç–æ–º –Ω–∞—à–µ–π –±–∞–∑—ã!",
                                            reply_markup=HIDE_KB)
                    return
                
                try:
                    
                    _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
                    
                    if not _fetchall_scammers:
                        
                        try:
                            
                            sql_edit(f'INSERT INTO scammers VALUES(?, ?, ?, ?);',
                                     (msg[1], 0, '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏', msg[2]))
                            
                            await message.reply(
                                'ü§î –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø—É—Ç–∞—Ü–∏—é',
                                reply_markup=InlineKeyboardMarkup([
                                    [InlineKeyboardButton('–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è ‚ö†', callback_data=f'reputation 0 '
                                                                                              f'{msg[1]} '
                                                                                              f'{message.from_user.id}')],
                                    [InlineKeyboardButton('–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä ‚ö†', callback_data=f'reputation 1 '
                                                                                              f'{msg[1]} '
                                                                                              f'{message.from_user.id}')],
                                    [InlineKeyboardButton('–°–ö–ê–ú–ú–ï–† ‚ö†', callback_data=f'reputation 2 '
                                                                                     f'{msg[1]} '
                                                                                     f'{message.from_user.id}')],
                                    [InlineKeyboardButton('–ü–µ—Ç—É—Ö üêì', callback_data=f'reputation 3 '
                                                                                   f'{msg[1]} '
                                                                                   f'{message.from_user.id}')],]))
                        
                        except Exception as exc:
                            await message.reply(exc)
                            connection.rollback()
                    
                    
                    else:
                        
                        keyboard = [
                            [InlineKeyboardButton(f'üîÅ {_fetchall_scammers[0][2]}',
                                                  callback_data=f'change_reputation {msg[1]} {message.from_user.id}')],
                            [InlineKeyboardButton('–î–æ–ø–æ–ª–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ ‚ûï', callback_data='in_dev')],
                            [InlineKeyboardButton(text='–í—ã–Ω–µ—Å—Ç–∏ –∏–∑ –±–∞–∑—ã ‚ùå', callback_data=f'del {msg[1]}')],
                        ]
                        
                        if account:
                            mention = account.mention
                        else:
                            mention = '–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫'
                            
                        await message.reply(f"ü§î {mention} [{msg[1]}] —É–∂–µ –∑–∞–Ω–µ—Å—ë–Ω –≤ –Ω–∞—à—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!\n\n"
                                            f"üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: {_fetchall_scammers[0][2]}\n\n"
                                            f"üìö <b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: {_fetchall_scammers[0][3]}",
                                            reply_markup=InlineKeyboardMarkup(keyboard))
                
                except Exception as e:
                    await message.reply(
                        e, reply_markup=HIDE_KB)
                    
        else:
            await message.reply("‚õî <b>–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º!</b>", reply_markup=HIDE_KB)
    

    @app.on_message(filters.command('–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞', [""]) & filters.text)
    async def answer(_, message):
        await app.send_photo(message.chat.id,
                             'https://telegra.ph/file/6ec8117345625474c8d21.png',
                             'üí™ –ò—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π',
                             reply_markup=InlineKeyboardMarkup([
                                 [InlineKeyboardButton('üå∏ –ê–î–ú–ò–ù–´ üå∏', callback_data='admins')],
                                 [InlineKeyboardButton('üêá –ì–ê–†–ê–ù–¢–´ üêá', callback_data='mms')]]))
    
    
    @app.on_message(filters.command('–ø–æ–Ω–∏–∑–∏—Ç—å', [""]) & filters.text)
    async def answer(_, message):
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (
                message.reply_to_message and message.reply_to_message.from_user.id and
                message.from_user.id == 1032156461) or (message.reply_to_message and _fetchall_admins[0][2] == 3):
            try:
                
                sql_edit(f'UPDATE admins SET status=status-1 WHERE id = {message.reply_to_message.from_user.id};', ())
                connection.commit()
                
                posted_message = await app.send_message(-1001652069822, f'''
{message.from_user.mention} –ø–æ–Ω–∏–∑–∏–ª {message.reply_to_message.from_user.mention}

#–ø–æ–Ω–∏–∂–µ–Ω–∏–µ''')
                await message.reply(
                    f'<b>üêñüêñ –¢—É–¥–æ–æ–æ–æ–æ</b>\n\n‚ÑπÔ∏è https://t.me/c/{str(posted_message.chat.id)[3:]}/{posted_message.id}')
            
            except Exception as exc:
                await app.send_message(DIMA, f'ü¶ç –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–Ω–∏–∂–µ–Ω–∏–∏: {exc}')
                connection.rollback()
        else:
            await message.reply('‚õî –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–ø–ª–∞–µ–º –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤.',
                                reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('–ø–æ–≤—ã—Å–∏—Ç—å', [""]) & filters.text)
    async def answer(_, message):
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (
                message.reply_to_message and message.reply_to_message.from_user.id
                and message.from_user.id == 1032156461) or (message.reply_to_message and _fetchall_admins[0][2] == 3):
            try:
                
                sql_edit(f'UPDATE admins SET status=status+1 WHERE id = {message.reply_to_message.from_user.id};', ())
                connection.commit()
                
                posted_message = await app.send_message(-1001652069822, f'''

{message.from_user.mention} –ø–æ–≤—ã—Å–∏–ª {message.reply_to_message.from_user.mention}

#–ø–æ–≤—ã—à–µ–Ω–∏–µ''')
                await message.reply(
                    f'<b>üêµüêµüôâ –°—é–¥–æ–æ–æ–æ</b>\n\n‚ÑπÔ∏è https://t.me/c/{str(posted_message.chat.id)[3:]}/{posted_message.id}')
            
            except Exception as exc:
                await app.send_message(DIMA, f'ü¶ç –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏: {exc}')
                connection.rollback()
        else:
            await message.reply('‚õî –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–ø–ª–∞–µ–º –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤.',
                                reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('–≤—ã–≥–æ–≤–æ—Ä', ["+"]) & filters.text)
    async def answer(_, message):
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (
                message.reply_to_message and message.reply_to_message.from_user.id and
                message.from_user.id == 1032156461) or (message.reply_to_message and _fetchall_admins[0][2] > 1):
            try:
                
                sql_edit(f'UPDATE admins SET warns=warns+1 WHERE id = {message.reply_to_message.from_user.id};', ())
                connection.commit()
                
                posted_message = await app.send_message(-1001652069822, f'''

{message.from_user.mention} –¥–∞–ª –≤—ã–≥–æ–≤–æ—Ä {message.reply_to_message.from_user.mention}

#–≤—ã–≥–æ–≤–æ—Ä''')
                await message.reply(
                    f'<b>ü¶Öü¶Öü¶Ö –¢—É–¥–æ–æ–æ–æ–∞–æ</b>\n\n‚ÑπÔ∏è https://t.me/c/{str(posted_message.chat.id)[3:]}/{posted_message.id}')
            
            except Exception as exc:
                await app.send_message(DIMA, f'ü¶ç –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥–æ–≤–æ—Ä–µ: {exc}')
                connection.rollback()
        else:
            await message.reply('‚õî –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–ø–ª–∞–µ–º –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤.',
                                reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('—Å–ø–∞—Å–∏–±–æ', ["+"]) & filters.text)
    async def answer(_, message):
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (
                message.reply_to_message and message.reply_to_message.from_user.id and
                message.from_user.id == 1032156461) or (message.reply_to_message and _fetchall_admins):
            
            try:
                
                user_state = await add_to_net(message.reply_to_message.from_user.id)
                sql_edit(f'UPDATE net SET contribution=contribution+1 '
                         f'WHERE id = {message.reply_to_message.from_user.id};', ())
                connection.commit()
                
                await message.reply(
                    f'ü•∞ {message.reply_to_message.from_user.mention}, <b>—Å–ø–∞—Å–∏–±–æ</b>, '
                    f'—á—Ç–æ –±–æ—Ä–µ—Ç–µ—Å—å —Å–æ —Å–∫–∞–º–æ–º –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏.\n\nüî• –í—ã —Å–ª–∏–ª–∏ —É–∂–µ {user_state[0][8] + 1} —Å–∫–∞–º–º–µ—Ä–æ–≤, '
                    f'—Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!')
            
            except Exception as exc:
                await app.send_message(DIMA, f'ü¶ç –û—à–∏–±–∫–∞ –ø—Ä–∏ +—Å–ø–∞—Å–∏–±–æ: {exc}')
                connection.rollback()
        else:
            await message.reply('‚õî –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–ø–ª–∞–µ–º –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤.',
                                reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('–≤—ã–≥–æ–≤–æ—Ä', ["-"]) & filters.text)
    async def answer(_, message):
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (message.reply_to_message and message.reply_to_message.from_user.id and message.from_user.id == 1032156461) \
                or (message.reply_to_message and _fetchall_admins[0][2] > 1):
            try:
                
                sql_edit(f'UPDATE admins SET warns=warns-1 WHERE id = {message.reply_to_message.from_user.id};', ())
                connection.commit()
                
                posted_message = await app.send_message(-1001652069822, f'''

{message.from_user.mention} —Å–Ω—è–ª –≤—ã–≥–æ–≤–æ—Ä {message.reply_to_message.from_user.mention}

#–≤—ã–≥–æ–≤–æ—Ä

    ''')
                await message.reply(
                    f'<b>ü¶õü¶õ –°—é–¥–æ–æ–æ–æ–æ</b>\n\n‚ÑπÔ∏è https://t.me/c/{str(posted_message.chat.id)[3:]}/{posted_message.id}')
            
            except Exception as exc:
                await app.send_message(DIMA, f'ü¶ç –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –≤—ã–≥–æ–≤–æ—Ä–∞: {exc}')
                connection.rollback()
        else:
            await message.reply('‚õî –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–ø–ª–∞–µ–º –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤.',
                                reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('unmm', ["/"]) & filters.text)
    async def answer(_, message):
        
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (message.from_user.id == 1032156461) or (_fetchall_admins[0][2] == 3):
            msg = message.text.split()
            
            if len(msg) > 1:
            
                try:
                    # msg[1] - ID, msg[2] - Cause
                    
                    _fetchall_scammers = sql_select(f"SELECT * FROM mms WHERE id = {msg[1]}")
                    if _fetchall_scammers:  # ['/add_scammer', ID (int), Cause (str)]
                        
                        sql_edit(f'DELETE FROM mms WHERE id = {msg[1]}', ())
                        posted_message = await app.send_message(-1001652069822, f'''

–ê–¥–º–∏–Ω {message.from_user.mention} —É–¥–∞–ª–∏–ª —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –ì–ê–†–ê–ù–¢–û–í –±–∞–∑—ã!
#id{message.from_user.id} #—É–¥–∞–ª–µ–Ω–∏–µ_–∏–∑_–±–¥
=============
–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:

<b>üÜî ID</b>: <code>{msg[1]}</code> <a href=tg://openmessage?user_id={msg[1]}>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>

                                        ''')
                        await message.reply(
                            f'<b>üëã | –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤ –±–∞–∑—ã.'
                            f'(–ß–û –ó–ê –õ–û–• –•–ê–•–ê–•–ê–•)</b>\n\n‚ÑπÔ∏è {posted_message.link}')
                    
                    else:
                        await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {msg[1]} –Ω–µ—Ç –≤ –≥–∞—Ä–∞–Ω—Ç–∞—Ö –±–∞–∑—ã", reply_markup=HIDE_KB)
                except Exception as e:
                    
                    await message.reply(
                        "–í–≤–µ–¥–∏—Ç–µ /unmm (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/@—é–∑–µ—Ä–Ω–µ–π–º)", reply_markup=HIDE_KB
                    )
                    await message.reply(
                        e, reply_markup=HIDE_KB
                    )
            else:
                await message.reply("–ù–µ —É–∫–∞–∑–∞–Ω üÜî", reply_markup=HIDE_KB)
        else:
            await message.reply("‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!", reply_markup=HIDE_KB)
            return
        
    
    @app.on_message(filters.command('unadmin', ["/"]) & filters.text)
    async def answer(_, message):
        
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (message.from_user.id == 1032156461) or (_fetchall_admins[0][2] == 3):
            msg = message.text.split()
            
            if len(msg) > 1:
            
                try:
                    # msg[1] - ID, msg[2] - Cause
                    
                    _fetchall_scammers = sql_select(f"SELECT * FROM admins WHERE id = {msg[1]}")
                    if _fetchall_scammers:  # ['/add_scammer', ID (int), Cause (str)]
                        
                        sql_edit(f'DELETE FROM admins WHERE id = {msg[1]}', ())
                        
                        try:
                            await app.send_message(msg[1], 'üëÄ –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –≤ –±–∞–∑–µ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞',
                                                   reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                                       text='–ß–µ–∫–Ω—É—Ç—å —Å–µ–±—è üîé',
                                                       callback_data=f'check {msg[1]}'
                                                   )]]))
                            commands.changed += 1
                            
                        except Exception as e:
                            await app.send_message(DIMA, f'‚õî –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n\n<pre>{e}</pre>')
                        
                        posted_message = await app.send_message(-1001652069822, f'''
    
–ê–¥–º–∏–Ω {message.from_user.mention} —É–¥–∞–ª–∏–ª —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –ê–î–ú–ò–ù–û–í –±–∞–∑—ã!
#id{message.from_user.id} #—É–¥–∞–ª–µ–Ω–∏–µ_–∏–∑_–±–¥
=============
–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:

<b>üÜî ID</b>: <code>{msg[1]}</code> <a href=tg://openmessage?user_id={msg[1]}>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>
    
                                            ''')
                        await message.reply(
                            f'<b>üëã | –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∞–¥–º–∏–Ω–æ–≤ –±–∞–∑—ã. (–ß–û –ó–ê –õ–û–• –•–ê–•–ê–•–ê–•)</b>\n\n'
                            f'‚ÑπÔ∏è https://t.me/c/{str(posted_message.chat.id)[3:]}/{posted_message.id}')
                    
                    else:
                        await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {msg[1]} –Ω–µ—Ç –≤ –∞–¥–º–∏–Ω–∞—Ö –±–∞–∑—ã", reply_markup=HIDE_KB)
                except Exception as e:
                    await message.reply(
                        "–í–≤–µ–¥–∏—Ç–µ /unadmin (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/@—é–∑–µ—Ä–Ω–µ–π–º)", reply_markup=HIDE_KB
                    )
                    await message.reply(
                        e, reply_markup=HIDE_KB
                    )
            else:
                await message.reply("–ù–µ —É–∫–∞–∑–∞–Ω üÜî!", reply_markup=HIDE_KB)
            
        else:
            await message.reply("‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!", reply_markup=HIDE_KB)
            return
    
    
    @app.on_message(filters.command('#—Ä–∞—Å—Å—ã–ª–∫–∞_–º–∏–¥–ª–∞–º', [""]) & filters.text)
    async def answer(_, message):
        if message.from_user.id == 1032156461:
            mms = sql_select(f"SELECT * FROM mms")
            
            await message.reply('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!', reply_markup=HIDE_KB)
            counter = 0
            
            for mm in mms:
                try:
                    await app.send_message(mm[0], message.text, reply_markup=HIDE_KB)
                    counter += 1
                except Exception as e:
                    await message.reply(
                        f'Error while trying to send message\n\nID - <code>{mm[0]}</code>\n\nReason - {e}')
            
            await message.reply(f'–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–∫–æ–Ω—á–µ–Ω–∞! \n\n –£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ {counter} —Å–æ–æ–±—â–µ–Ω–∏–π!')
    
    
    @app.on_message(filters.command('dm', ["/"]) & filters.text)
    async def answer(_, message):
        
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (message.from_user.id == 1032156461) or (_fetchall_admins[0][2] == 3):
            msg = message.text.split(' ', 2)
            try:
                await app.send_message(chat_id=msg[1], text=f'''
<b>üÜï –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b>

<i>{msg[2]}</i>
                ''')
            except Exception as e:
                await message.reply(f'{e}')
    
    
    @app.on_message(filters.command('admin', ["/"]) & filters.text)
    async def answer(_, message):
        
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (message.from_user.id == 1032156461) or (_fetchall_admins[0][2] == 3):
            msg = message.text.split()
            
            if 2 > len(msg):
                await message.reply(
                    "<q>–í–≤–µ–¥–∏—Ç–µ /admin üÜî</q>", reply_markup=HIDE_KB)
                return
            
            msg[1] = await get_user_id(msg[1])
            
            try:
                
                _fetchall_admins = sql_select(f"SELECT id FROM admins WHERE id = {msg[1]}")
                if not _fetchall_admins:
                    
                    sql_edit(f'INSERT INTO admins VALUES(?, ?, ?, ?);', (msg[1], 0, 0, 0))
                    await message.reply('‚úÖ')
                
                else:
                    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {msg[1]} —É–∂–µ –∞–¥–º–∏–Ω!", reply_markup=HIDE_KB)
            except Exception as e:
                
                await message.reply(
                    f"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\n\n<pre>{e}</pre>", reply_markup=HIDE_KB)
        else:
            await message.reply(
                "‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!", reply_markup=HIDE_KB)
            return
    
    
    @app.on_message(filters.command('trust', ["/", "!"]) & filters.text)
    async def answer(_, message):
        
        _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {message.from_user.id}")
        if (message.from_user.id == 1032156461) or _fetchall_mms:
            
            msg = message.text.split()
            if 2 > len(msg):
                await message.reply("<q>–í–≤–µ–¥–∏—Ç–µ /trust üÜî</q>", reply_markup=HIDE_KB)
                return
            
            msg[1] = await get_user_id(msg[1])
            
            try:
                _fetchall_net = sql_select(f"SELECT is_trusted FROM net WHERE id = {msg[1]}")
                if _fetchall_net and _fetchall_net[0][0] == 0:
                    
                    sql_edit(f'UPDATE net SET is_trusted= ? WHERE id = ?;', (message.from_user.id, msg[1]))
                    posted_message = await app.send_message(
                        -1001652069822,
                        f'''
–ì–∞—Ä–∞–Ω—Ç {message.from_user.mention} –Ω–∞–∑–Ω–∞—á–∏–ª —Å–µ–±–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ!
#id{message.from_user.id} #NewTrusted
=============
–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:

<b>üÜî ID</b>: <code>{msg[1]}</code> <a href=tg://openmessage?user_id={msg[1]}>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>''')
                    await message.reply('‚úÖ')
                    await message.reply(
                        f'<b>üëã | –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ {(await app.get_users(msg[1])).mention} –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º'
                        f'\n\n‚ÑπÔ∏è {posted_message.link}')
                
                else:
                    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {(await app.get_users(msg[1])).mention} "
                                        f"—É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π {(await app.get_users(_fetchall_net[0][0])).mention}!",
                                        reply_markup=HIDE_KB)
            except Exception as e:
                
                await message.reply(
                    "<q>–í–≤–µ–¥–∏—Ç–µ /trust üÜî</q>", reply_markup=HIDE_KB
                )
                await message.reply(
                    e, reply_markup=HIDE_KB
                )
        else:
            await message.reply("‚≠ê –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≥–∞—Ä–∞–Ω—Ç–∞–º!", reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('untrust', ["/", "!"]) & filters.text)
    async def answer(_, message):
        
        _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {message.from_user.id}")
        if message.from_user.id == 1032156461 or _fetchall_mms:
            msg = message.text.split()
            
            if 2 > len(msg):
                await message.reply("<q>–í–≤–µ–¥–∏—Ç–µ /trust üÜî</q>", reply_markup=HIDE_KB)
                return
            
            msg[1] = await get_user_id(msg[1])
            
            try:
                # msg[1] - ID, msg[2] - Cause
                
                _fetchall_net = sql_select(f"SELECT is_trusted FROM net WHERE id = {msg[1]}")
                if _fetchall_net and _fetchall_net[0][0] == message.from_user.id or message.from_user.id == 1032156461:
                    
                    sql_edit(f'UPDATE net SET is_trusted=0 WHERE id = {msg[1]}', ())
                    posted_message = await app.send_message(-1001652069822, f'''
–ì–∞—Ä–∞–Ω—Ç {message.from_user.mention} —É–¥–∞–ª–∏–ª —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö!
#id{message.from_user.id} #TrustedBeingRemoved
=============
–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:

<b>üÜî ID</b>: <code>{msg[1]}</code> <a href=tg://openmessage?user_id={msg[1]}>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>''')
                    await message.reply('‚úÖ')
                    await message.reply(
                        f'<b>üëã | –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö.'
                        f'(–ò–ó–ò –ú–ê–ú–û–ù–¢ –ë–û–ñ–ï)</b>\n\n‚ÑπÔ∏è {posted_message.link}')
                
                else:
                    await message.reply(f"üçë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {msg[1]} –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –≤–∞—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö",
                                        reply_markup=HIDE_KB)
            except Exception as e:
                
                await message.reply("<q>–í–≤–µ–¥–∏—Ç–µ /untrust üÜî</q>", reply_markup=HIDE_KB)
                await message.reply(e, reply_markup=HIDE_KB)
        else:
            await message.reply("‚≠ê –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≥–∞—Ä–∞–Ω—Ç–∞–º!", reply_markup=HIDE_KB)


    @app.on_message(filters.command('settings', ["/"]) & filters.text)
    async def answer(_, message):
        
        await check_if_a_user(message)
        
        if message.chat.type == ChatType.GROUP or message.chat.type == ChatType.SUPERGROUP:
            
            status = await app.get_chat_member(chat_id=message.chat.id,
                                               user_id=message.from_user.id)
            
            if status.status == ChatMemberStatus.ADMINISTRATOR or status.status == ChatMemberStatus.OWNER \
                    or message.from_user.id == 1032156461:
                
                group = sql_select(f"SELECT * FROM groups WHERE id = {message.chat.id}")[0]
                
                if group[2] == -1:
                    autoban = '‚ùå –ê–≤—Ç–æ–±–∞–Ω –æ—Ç–∫–ª—é—á—ë–Ω'
                elif group[2] == 0:
                    autoban = '‚úÖ –ü–ª–æ—Ö–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è +'
                elif group[2] == 1:
                    autoban = '‚úÖ –í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä +'
                elif group[2] == 2:
                    autoban = '‚úÖ –ë–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –°–∫–∞–º–º–µ—Ä–æ–≤'
                else:
                    autoban = '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
                
                if group[3] == 1:
                    enabledalert = '‚úÖ'
                else:
                    enabledalert = '‚ùå'
                
                if group[4] == 1:
                    enabledhelp = '‚úÖ'
                else:
                    enabledhelp = '‚ùå'
                
                keyboard = InlineKeyboardMarkup(
                    [[InlineKeyboardButton(f"–ê–í–¢–û–ë–ê–ù - ({autoban}) ‚úÖ",
                                           callback_data=f'autoban {message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledalert} –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø",
                                           callback_data=f'scamwarn {message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledhelp} –°–õ–ò–¢–¨ –°–ö–ê–ú–ï–†–ê",
                                           callback_data=f'slivscam {message.chat.id}')]]
                )
                
                await message.reply(
                    '–ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–≤—Ç–æ–±–∞–Ω. '
                    '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, –Ω–∞—á–∏–Ω–∞—è —Å –∫–∞–∫–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –∑–∞–±–∞–Ω–µ–Ω.\n\n'
                    '–í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Å–∫–∞–º, –µ—Å–ª–∏ –æ–Ω –ø–∏—à–µ—Ç –≤ —á–∞—Ç.\n\n'
                    '–¢—Ä–µ—Ç—å—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ –≤ –Ω–∞—à–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —á–∞—Ç–µ.\n\n\n'
                    '<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã:</b>',
                    reply_markup=keyboard)
            
            else:
                await message.reply('‚õî –í—ã –Ω–µ –∞–¥–º–∏–Ω –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ!', reply_markup=HIDE_KB)
        
        else:
            await message.reply('‚õî –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø!', reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('–ü—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É üí∞', "") & filters.text)
    async def answer(_, message):
        
        if message.chat.type == ChatType.PRIVATE:
            await message.reply(
                '<a href=https://telegra.ph/file/952f65f85ddf10d64b4a5.png>\u200B</a>'
                '<b>üå¥ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å–¥–µ–ª–∫—É —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞</b>\n\n'
                'üë©‚Äçüíª –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –≥—Ä—É–ø–ø—É –¥–ª—è —Å–¥–µ–ª–∫–∏ –∏ –ø–æ–¥–±–µ—Ä—ë—Ç –≤–∞–º –≥–∞—Ä–∞–Ω—Ç–∞ –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã.',
                # ' <b>–ì–∞—Ä–∞–Ω—Ç—ã –±–µ—Ä—É—Ç –æ–ø–ª–∞—Ç—É - 10% –æ—Ç —Å—É–º–º—ã —Å–¥–µ–ª–∫–∏</b>'
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É üå¥', callback_data='trade')],
                     [InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')]]))
        
        else:
            await message.reply('‚ö†Ô∏è –î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º',
                                reply_markup=InlineKeyboardMarkup(
                                    [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ ‚û°Ô∏è', callback_data='dms')]]))
    
    @app.on_message(filters.command('mm', ["/"]) & filters.text)
    async def answer(_, message):
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        if (message.from_user.id == 1032156461) or (_fetchall_admins[0][2] == 3):
            msg = message.text.split()
            
            if 2 > len(msg):
                await message.reply(
                    "–í–≤–µ–¥–∏—Ç–µ <code>/mm (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)</code>", reply_markup=HIDE_KB)
                
                return
            
            msg[1] = await get_user_id(msg[1])
            
            try:
                
                _fetchall_admins = sql_select(f"SELECT * FROM mms WHERE id = {msg[1]}")
                if not _fetchall_admins:  # ['/add_scammer', ID (int), Cause (str)]
                    sql_edit(f'INSERT INTO mms VALUES(?, ?, ?, ?, ?, ?);',
                             (msg[1], 0, 0, 0, 0, 0))
                
                try:
                    await app.send_message(msg[1], 'üëÄ –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –≤ –±–∞–∑–µ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞',
                                           reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                               text='–ß–µ–∫–Ω—É—Ç—å —Å–µ–±—è üîé',
                                               callback_data=f'check {msg[1]}'
                                           )]]))
                    commands.changed += 1
                
                except Exception as e:
                    await app.send_message(DIMA,
                                           f'‚õî –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n\n<pre>{e}</pre>')
                
                
                else:
                    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {msg[1]} —É–∂–µ –≥–∞—Ä–∞–Ω—Ç!", reply_markup=HIDE_KB)
            except Exception as e:
                
                await message.reply(
                    "<quote>–í–≤–µ–¥–∏—Ç–µ  /mm üÜî</quote>", reply_markup=HIDE_KB
                )
                await message.reply(
                    e, reply_markup=HIDE_KB
                )
        else:
            await message.reply(
                "‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!", reply_markup=HIDE_KB
            )
            return
    
    
    @app.on_message(filters.group)
    async def is_a_scammer_warn(_, message):
        
        if message.chat.id == -1001740473921:
            if message.text and '!–∞–¥–º–∏–Ω' in message.text.lower():
                await message.reply('‚úÖ –Ø –ø–æ–∑–≤–∞–ª –∞–¥–º–∏–Ω–æ–≤!', reply_markup=HIDE_KB)
                await app.send_message(
                    chat_id=-1001869548358,
                    text='üî• <b>–ê–¥–º–∏–Ω—ã, –≤–∞—Å –∑–æ–≤—É—Ç –≤ —á–∞—Ç –∂–∞–ª–æ–±</b>',
                    reply_markup=CHANNEL_KB)
        
        if message.text and '—á—Ç–æ –¥–µ–ª–∞—Ç—å' in message.text.lower():
            await message.reply('–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ ...', reply_markup=WHAT_TO_DO_KB)
        
        _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {message.from_user.id}")
        
        if _fetchall_scammers:
            group = sql_select(f"SELECT * FROM groups WHERE id = {message.chat.id}")[0]
            if group and group[3] == 1:
                commands.scamwarn += 1
                keyboard = InlineKeyboardMarkup([[InlineKeyboardButton('–†–ê–ó–í–ï–†–ù–£–¢–¨ üôà',
                                                                       callback_data=f'alert+ {message.from_user.id}')],
                                                 [InlineKeyboardButton('–ó–ê–ë–ê–ù–ò–¢–¨ ‚õî',
                                                                       callback_data=f'ban {message.from_user.id}')]])
                
                await message.reply(
                    f'''
<a href={random.choice(scam_pictures)}>\u200B</a>
‚ö†Ô∏è {message.from_user.mention} [<code>{message.from_user.id}</code>] –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—à–µ–π –±–∞–∑–µ. –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!

üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: {_fetchall_scammers[0][2]}''', reply_markup=keyboard)
            
            if group and group[2] >= 0:
                
                reputation = False
                if _fetchall_scammers[0][2].startswith('–°–ö–ê–ú–ú–ï–†'):
                    reputation = 2
                elif _fetchall_scammers[0][2].startswith('–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –°–∫–∞–º–º–µ—Ä') \
                        or _fetchall_scammers[0][2].startswith('–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä'):
                    reputation = 1
                elif _fetchall_scammers[0][2].startswith('–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è'):
                    reputation = 0
                
                if reputation and group[2] <= reputation:
                    await app.ban_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
                    await message.reply('‚úÖ –°–∫–∞–º–º–µ—Ä –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω', reply_markup=HIDE_KB)
    
    
    @app.on_message(filters.command('–°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ üò°', ''), group=2)
    async def have_you_been_scammed(_, message):
        
        if message.chat.type == ChatType.PRIVATE:
            await message.reply(
                '<a href=https://telegra.ph/file/d9f3c88c3f0e36f89bb17.png>\u200B</a>'
                '<b>üòÆ‚Äçüí® –ï—Å–ª–∏ –≤—ã —Å—Ç–∞–ª–∏ –∂–µ—Ä—Ç–≤–æ–π –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ - –∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–ø–∏—Å–∞—Ç—å –∂–∞–ª–æ–±—É"</b>\n\n'
                'üë©‚Äçüíª –í—ã –±—É–¥–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —á–∞—Ç —Å –Ω–∞—à–∏–º–∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞–º–∏, –æ–Ω–∏ —Ä–∞–∑–±–µ—Ä—É—Ç—Å—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ '
                '–∑–∞–Ω–µ—Å—É—Ç –º–æ—à–µ–Ω–Ω–∏–∫–∞ –≤ –±–∞–∑—É. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –∂–∞–ª–æ–±—É üìù', callback_data='delation')],
                     [InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')]]))
        
        else:
            await message.reply('‚ö†Ô∏è –î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º',
                                reply_markup=InlineKeyboardMarkup(
                                    [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ ‚û°Ô∏è', callback_data='dms')]]))
    
    
    @app.on_message(filters.group & filters.text, group=2)
    async def have_you_been_scammed(_, message):
        
        commands.report += 1
        
        if message.chat.id == -1001740473921 and '—Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞' in message.text.lower():
            await message.reply('–ö–∞–∫ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ –Ω–∞–ø–∏—Å–∞–Ω–æ –≤ —ç—Ç–æ–º –ø–æ—Å—Ç–µ - https://t.me/AntiScamRoblox/307',
                                reply_markup=HIDE_KB)
        
        if message.text.startswith('/'):
            return
        
        try:
            for word in scam_list:
                if message.text and word in message.text.lower():
                    group = sql_select(f"SELECT * FROM groups WHERE id = {message.chat.id}")[0]
                    if group and group[4] == 1:
                        our_group = await app.get_chat(report_group)
                        await message.reply(f'''
<b>ü§¨ –í–ê–° –°–ö–ê–ú–ù–£–õ–ò? –•–û–¢–ò–¢–ï –°–õ–ò–¢–¨ –û–ë–ú–ê–ù–©–ò–ö–ê?</b>

–°–†–û–ß–ù–û!!! –°–∫–∏–¥—ã–≤–∞–π—Ç–µ –ø—Ä—É—Ñ—ã –≤ @{our_group.username} –∏ –º—ã –∑–∞–Ω–µ—Å—ë–º —Å–∫–∞–º–º–µ—Ä–∞ –≤ –±–∞–∑—É
            ''', reply_markup=AS_REPORT_KB)
                        return
        except FloodWait:
            pass
        
        except Exception as e:
            await app.send_message(DIMA,
                                   f'‚õî –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç –∂–∞–ª–æ–±—ã –≤ –≥—Ä—É–ø–ø—É!\n\n<pre>{e}</pre>')
            return
    
    
    @app.on_message(filters.chat(-1001949170455), group=3)
    async def clear(_, message):
        _paterpervsgiee = sql_select(
            f"SELECT initiator FROM delations "
            f"WHERE topic_id = {message.reply_to_message_id} AND initiator = {message.from_user.id}")
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {message.from_user.id}")
        
        if not _fetchall_admins and not _paterpervsgiee:
            await app.delete_messages(message.chat.id, message.id)
        
    
    
    @app.on_message(filters.sticker, group=31)
    async def clean(_, message):
        if message.sticker.set_name in bad_stickers:
            await app.delete_messages(message.chat.id, message.id)
    
    
    @app.on_message(filters.new_chat_members, group=30)
    async def hello(_, message):
        
        sent = await app.send_message(message.chat.id, f'<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.mention}!</b>')
        kb = InlineKeyboardMarkup([[InlineKeyboardButton('ü§ù', callback_data='privet')]])
        person = message.from_user
        
        user_state = await add_to_net(message.from_user.id)
        _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {person.id}")
        _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {person.id}")
        _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {person.id}")
        
        
        
        if _fetchall_mms:
            text = f'<a href={themes["default"]["mm"]}>\u200B</a>\n' \
                   'üî• <i>–ö —á–∞—Ç—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è <b>–ì–∞—Ä–∞–Ω—Ç</b> GASD</i>'
        
        elif user_state[0][6] > 0:
            text = f'<a href={themes["default"]["trusted"]}>\u200B</a>\n' \
                   f'üî• <i>–ö —á–∞—Ç—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è <b>—á–µ–ª–æ–≤–µ–∫, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –≥–∞—Ä–∞–Ω—Ç–æ–º</b> GASD</i>'
        
        elif _fetchall_admins:
            
            if person.id == 1032156461:
                role = 'üî• –°–æ–∑–¥–∞—Ç–µ–ª—å'
            elif _fetchall_admins[0][2] == 0:
                role = '–°—Ç–∞–∂—ë—Ä'
            elif _fetchall_admins[0][2] == 1:
                role = '–ê–¥–º–∏–Ω'
            elif _fetchall_admins[0][2] == 2:
                role = '–î–∏—Ä–µ–∫—Ç–æ—Ä'
            elif _fetchall_admins[0][2] == 3:
                role = '–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç'
            else:
                role = '–¥–æ–ª–±–æ—ë–± –∏–∑'
            
            text = f'<a href={themes["default"]["staff"]}>\u200B</a>\n' \
                   f'üî• <i>–ö —á–∞—Ç—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è <b>{role}</b> GASD</i>'
        
        elif _fetchall_scammers:
            
            if _fetchall_scammers[0][2] == '–°–ö–ê–ú–ú–ï–† ‚ö†':
                
                text = f'<a href={themes["default"]["scam"]}>\u200B</a>\n' \
                       '‚ö†Ô∏è <i>–ö —á–∞—Ç—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è <b>–°–∫–∞–º–º–µ—Ä</b>!</i>\n\n' \
                       '–ù–µ –¥–æ–≤–µ—Ä—è–π—Ç–µ —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É.'
                kb = InlineKeyboardMarkup([[InlineKeyboardButton('–ó–ê–ë–ê–ù–ò–¢–¨ ‚õî',
                                                                 callback_data=f'ban {message.from_user.id}')]])
            
            
            else:
                
                scam_chance = await scam_chances(person, 70)
                
                text = (f'<a href={themes["default"]["high_scam_chances"]}>\u200B</a>\n'
                        f'‚ö†Ô∏è <i>–ö —á–∞—Ç—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è <b>—á–µ–ª–æ–≤–µ–∫ —Å –≤—ã—Å–æ–∫–∏–º —à–∞–Ω—Å–æ–º —Å–∫–∞–º–∞</b>!</i>\n\n'
                        f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞: {scam_chance}%')
                kb = InlineKeyboardMarkup([[InlineKeyboardButton('–ó–ê–ë–ê–ù–ò–¢–¨ ‚õî',
                                                                 callback_data=f'ban {message.from_user.id}')]])
        
        else:
            await update_stats(person)
            
            scam_chance = await scam_chances(person, 45)
            
            text = (f'<a href={themes["default"]["no_data"]}>\u200B</a>\n'
                    f'‚ÑπÔ∏è <i>–ß–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ</i>\n\n'
                    f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞: {scam_chance}%')
        
        await sent.reply(text=text, reply_markup=kb, quote=False)
    
    
    @app.on_message(filters.forwarded & filters.private, group=10)
    async def check_forwarded(_, message):
        commands.check += 1
        sent = await message.reply(f'‚è≥ {message.from_user.mention}, –∑–∞–≥—Ä—É–∂–∞–µ–º...\n\n‚ÑπÔ∏è {random.choice(hints)}')
        
        if not message.forward_from:
            await sent.edit(
                '–ë–æ—Ç –Ω–µ —Å–º–æ–≥ —É–≤–∏–¥–µ—Ç—å, –æ—Ç –∫–æ–≥–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. '
                '–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫—Ä—ã–ª —Å–≤–æ–π –Ω–∏–∫ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ.')
            return
        
        if message.chat.type == ChatType.PRIVATE:
            if not await check_sub(message):
                return
        
        res = await check_person_by_id(message.forward_from)
        if res:
            await sent.edit(res, reply_markup=AS_REPORT_KB)
            await if_supports_gasd(message.reply_to_message.from_user, message.chat.id)
            await if_hedgehog(message.reply_to_message.from_user, message.chat.id)
    
    
    @app.on_inline_query()
    async def answer(_, inline_query):
        await inline_query.answer(
            results=[
                InlineQueryResultArticle(
                    title="üî• –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–±—è –Ω–∞ —Å–∫–∞–º",
                    input_message_content=InputTextMessageContent(
                        await check_person_by_id(inline_query.from_user)
                    ),
                    description="–ü–æ–∫–∞–∂–µ—Ç –≤–∞—à—É —Ä–µ–ø—É—Ç–∞—Ü–∏—é –≤ –±–æ—Ç–µ",
                    reply_markup=InlineKeyboardMarkup(
                        [
                            [InlineKeyboardButton(
                                "üíô –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∫–∞–º üíô",
                                url='t.me/AntiScamDatabaseBot'
                            )]
                        ]
                    )
                ),
            ],
            cache_time=1
        )
    
    
    @app.on_callback_query()
    async def react(_, callback_query):
        
        global banned
        data = callback_query.data
        
        if data.startswith('ban'):
            status = await app.get_chat_member(chat_id=callback_query.message.chat.id,
                                               user_id=callback_query.from_user.id)
            
            if status.status == ChatMemberStatus.ADMINISTRATOR or status.status == ChatMemberStatus.OWNER:
                
                try:
                    await app.ban_chat_member(chat_id=callback_query.message.chat.id, user_id=data.split()[1])
                    await callback_query.answer(
                        f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω",
                        show_alert=True)
                    commands.banned += 1
                    await app.send_message(1032156461,
                                           f'üî• –ù–æ–≤—ã–π –±–∞–Ω. '
                                           f'–ß–∞—Ç - {callback_query.message.chat.title}, '
                                           f'–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä - {callback_query.from_user.mention}')
                except Exception as e:
                    await callback_query.answer(
                        f"{e}",
                        show_alert=True)
            else:
                await callback_query.answer(
                    f"‚õî –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º –∏ –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞",
                    show_alert=True)
        
        elif data.startswith('dms'):
            await callback_query.answer(url='t.me/AntiscamDatabaseBot?start=callback')
        
        elif data.startswith('accept_terms'):
            
            msg = data.split()
            
            if len(msg) > 1:
            
                if callback_query.from_user.id == int(msg[1]):
                    ...
                    # scamdata = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
                    # netdata = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
                else:
                    await callback_query.answer('‚õî –≠—Ç–æ –Ω–µ –í–∞—à–∞ –∫–Ω–æ–ø–∫–∞')
            else:
                await callback_query.answer("‚õî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –£–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—à–∏–±–∫—É —Å–æ–∑–¥–∞—Ç–µ–ª—é.", show_alert=True)
                await app.send_message(DIMA, f'‚õî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Callback —É –∫–Ω–æ–ø–∫–∏ TOS!\n\n{data}')
                return
        
        elif data.startswith('Xsorry'):
            msg = data.split()
            
            if len(msg) > 1:
            
                if callback_query.from_user.id == int(msg[1]):
                    
                    scamdata = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
                    netdata = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
                    
                    if scamdata and netdata and netdata[0][7] == 0:
                        if scamdata[0][3].lower().startswith('–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–∞–º –≥—Ä—É–ø') and len(scamdata[3]) < 64:
                            await callback_query.message.edit(
                                f"üíÅ‚Äç‚ôÇÔ∏è <b>{callback_query.from_user.mention}, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –Ω–∏–∂–µ:</b>\n\n"
                                "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –±–∞–∑–µ –∑–∞ \"<i>–ü–æ–¥–¥–µ—Ä–∂–∫—É —Å–∫–∞–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏</i>\", –∑–∞ —á—Ç–æ –º—ã –±–æ–ª—å—à–µ –Ω–µ"
                                "–¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã\n\n"
                                "<b>–ü—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –±–∞–∑—ã –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å:</b>\n\n"
                                "‚Ä¢ –ò–¥—Ç–∏ —á–µ—Ä–µ–∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤ –±–∞–∑—ã GASD –∏ –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ—Ç –Ω–∏—Ö,\n"
                                "‚Ä¢ –ù–µ —Ä–∞—Å–ø—É—Å–∫–∞—Ç—å –¥–∏–∑-–∏–Ω—Ñ—É –ø—Ä–æ –±–∞–∑—É GASD\n",
                                "‚Ä¢ –ù–µ —Ä–∞—Å–ø—É—Å–∫–∞—Ç—å –¥–∏–∑-–∏–Ω—Ñ—É –ø—Ä–æ –±–∞–∑—É GASD\n",
                                "‚Ä¢ –ù–µ —Å–∫–∞–º–∏—Ç—å, –Ω–µ –ø–æ–º–æ–≥–∞—Ç—å —Å–∫–∞–º–º–µ—Ä–∞–º –∏ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å —Å–∫–∞–º"
                                "\n\nüéì <b>–£–¥–∞–ª–∏—Ç—å—Å—è –∏–∑ –±–∞–∑—ã –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑</b>",
                                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                    text='–ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è ‚úÖ',
                                    callback_data=f'accept_terms {msg[1]}'
                                )]]))
                            return
                        elif scamdata[0][3].lower().startswith('–æ—Ç–∫–∞–∑ –æ—Ç –≥–∞—Ä–∞–Ω—Ç–∞') and len(scamdata[3]) < 64:
                            await callback_query.message.edit(
                                f"üíÅ‚Äç‚ôÇÔ∏è <b>{callback_query.from_user.mention}, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –Ω–∏–∂–µ:</b>\n\n"
                                "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –±–∞–∑–µ –∑–∞ \"<i>–û—Ç–∫–∞–∑ –æ—Ç –≥–∞—Ä–∞–Ω—Ç–∞</i>\", –Ω–æ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å "
                                "—É–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–∑ –±–∞–∑—ã\n\n"
                                "<b>–ü—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –±–∞–∑—ã –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å:</b>\n\n"
                                "‚Ä¢ –ò–¥—Ç–∏ —á–µ—Ä–µ–∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤ –±–∞–∑—ã GASD –∏ –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ—Ç –Ω–∏—Ö,\n"
                                "‚Ä¢ –ù–µ —Ä–∞—Å–ø—É—Å–∫–∞—Ç—å –¥–∏–∑-–∏–Ω—Ñ—É –ø—Ä–æ –±–∞–∑—É GASD\n",
                                "‚Ä¢ –ù–µ —Ä–∞—Å–ø—É—Å–∫–∞—Ç—å –¥–∏–∑-–∏–Ω—Ñ—É –ø—Ä–æ –±–∞–∑—É GASD\n",
                                "‚Ä¢ –ù–µ —Å–∫–∞–º–∏—Ç—å, –Ω–µ –ø–æ–º–æ–≥–∞—Ç—å —Å–∫–∞–º–º–µ—Ä–∞–º –∏ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å —Å–∫–∞–º"
                                "\n\nüéì <b>–£–¥–∞–ª–∏—Ç—å—Å—è –∏–∑ –±–∞–∑—ã –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑</b>",
                                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                    text='–ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è ‚úÖ',
                                    callback_data=f'accept_terms {msg[1]}'
                                )]]))
                            return
                        else:
                            await callback_query.message.edit(
                                "‚õî –û—Ç–∫–∞–∑–∞–Ω–æ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –Ω–∞ @AntiScamRoblox",
                                reply_markup=HIDE_KB
                            )
                            return
                    else:
                        await callback_query.message.edit(
                            "‚õî <b>–û—à–∏–±–∫–∞!</b>\n\n–õ–∏–±–æ –≤—ã —É–∂–µ –Ω–µ –≤ –±–∞–∑–µ, –ª–∏–±–æ –≤—ã —É–∂–µ –≤—ã—Ö–æ–¥–∏–ª–∏ —Å –±–∞–∑—ã.",
                            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                text='–ß–µ–∫–Ω—É—Ç—å —Å–µ–±—è üîé',
                                callback_data=f'check {msg[1]}'
                            )]])
                        )
                        return
                else:
                    await callback_query.answer('‚õî –≠—Ç–æ –Ω–µ –í–∞—à–∞ –∫–Ω–æ–ø–∫–∞')
            else:
                await callback_query.answer("‚õî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –£–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—à–∏–±–∫—É —Å–æ–∑–¥–∞—Ç–µ–ª—é.", show_alert=True)
                await app.send_message(DIMA, f'‚õî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Callback —É –∫–Ω–æ–ø–∫–∏ SORRY!\n\n{data}')
                return
            
        elif data.startswith('del '):
            _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {callback_query.from_user.id}")
            
            if _fetchall_admins != [] or callback_query.from_user.id == 1032156461:
                msg = data.split()
                
                if len(msg) > 1:
                
                    try:
                        person = await app.get_users(msg[1])
                        msg[1] = person.id
                    except Exception as e:
                        await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è\n\n<pre>{e}</pre>')
                    
                    try:
                        # msg[1] - ID, msg[2] - Cause
                        
                        _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {msg[1]}")
                        if _fetchall_scammers:  # ['/add_scammer', ID (int), Cause (str)]
                            
                            sql_edit(f'DELETE FROM scammers WHERE id = {msg[1]}', ())
                            
                            try:
                                await app.send_message(msg[1], 'üëÄ –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –≤ –±–∞–∑–µ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞',
                                                       reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                                           text='–ß–µ–∫–Ω—É—Ç—å —Å–µ–±—è üîé',
                                                           callback_data=f'check {msg[1]}'
                                                       )]]))
                                commands.changed += 1
                            
                            except Exception as e:
                                await app.send_message(DIMA, f'‚õî –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n\n<pre>{e}</pre>')
                            
                            posted_message = await app.send_message(-1001652069822, f'''
    
–ê–¥–º–∏–Ω {callback_query.from_user.mention} —É–¥–∞–ª–∏–ª —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –±–∞–∑—ã!
#id{callback_query.from_user.id} #—É–¥–∞–ª–µ–Ω–∏–µ_–∏–∑_–±–¥
=============
–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:

<b>üÜî ID</b>: <code>{msg[1]}</code> <a href=tg://openmessage?user_id={msg[1]}>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>
    
                                                        ''')
                            await callback_query.message.edit(
                                f'<b>üëã | –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª '
                                f'<a href=tg://openmessage?user_id={msg[1]}>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã.</a>'
                                f'</b>\n\n‚ÑπÔ∏è https://t.me/c/{str(posted_message.chat.id)[3:]}/{posted_message.id}')
                        
                        else:
                            await callback_query.message.edit(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {msg[1]} –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö",
                                                              reply_markup=HIDE_KB)
                    except Exception as e:
                        
                        await callback_query.message.edit(
                            "–í–≤–µ–¥–∏—Ç–µ <code>/del (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/@—é–∑–µ—Ä–Ω–µ–π–º)</code>", reply_markup=HIDE_KB
                        )
                        await callback_query.message.edit(
                            e, reply_markup=HIDE_KB
                        )
                else:
                    await callback_query.answer("‚õî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –£–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—à–∏–±–∫—É —Å–æ–∑–¥–∞—Ç–µ–ª—é.",
                                                show_alert=True)
                    await app.send_message(DIMA, f'‚õî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Callback —É –∫–Ω–æ–ø–∫–∏ DEL!\n\n{data}')
                    return
                
            else:
                await callback_query.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!", show_alert=True)
                return
        
        elif data.startswith('howto'):
            commands.help += 1
            
            await app.send_chat_action(callback_query.message.chat.id, ChatAction.UPLOAD_VIDEO)
            sent = await app.send_video(
                chat_id=callback_query.message.chat.id,
                video='BAACAgIAAxkDAAEE8jlkqVpmXjQIgMTJyg-OY_6FKnWSGQAC-jMAAuQEUEn_RdEmWrw4pB4E',
                caption='''–Ø - GASD üí™üß¨, –±–æ—Ç, –ø–æ–º–æ–≥–∞—é—â–∏–π –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ª—é–¥–µ–π –Ω–∞ —Å–∫–∞–º –∏ —Å–ª–∏–≤–∞—Ç—å —Å–∫–∞–º–º–µ—Ä–æ–≤.

/start
- <i>–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, –µ—Å–ª–∏ –ø—Ä–æ–ø–∞–ª–∏ –∫–Ω–æ–ø–∫–∏</i> üß¨

/check (@—é–∑–µ—Ä | ID –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–≥–æ, –±–µ–∑ —Å–∫–æ–±–æ–∫)
- <i>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–∫–∞–º</i> üò≥

/me
- <i>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</i> üëª

<b>üëá –û—Å—Ç–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤ –º–µ–Ω—é</b>

–°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ - @GasdReport
                    ''',
                reply_markup=DEFAULT_KB)
        
        
        elif data.startswith('mmchat'):
            await callback_query.message.edit(
                f'''
{callback_query.from_user.mention}, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –ß–∞—Ç –ì–∞—Ä–∞–Ω—Ç–æ–≤ GASD</b> üóΩ‚ö°

–ë–æ—Ç –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏ –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –∑–∞—è–≤–∫–∏. –ü—Ä–∏–Ω—è—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≥–∞—Ä–∞–Ω—Ç—ã –Ω–∞—à–µ–π –±–∞–∑—ã.''',
                reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("‚≠ê –ß–ê–¢ –ì–ê–†–ê–ù–¢–û–í ‚≠ê", url="https://t.me/+HVV80SR_f7QxNGEy")],
                [InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='me')]]))
        
        elif data.startswith('adminchat'):
            await callback_query.message.edit(
                f'{callback_query.from_user.mention}, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –ß–∞—Ç –ê–¥–º–∏–Ω–æ–≤ GASD</b> üå¥‚ö°'
                '–ë–æ—Ç –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏ –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –∑–∞—è–≤–∫–∏. –ü—Ä–∏–Ω—è—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≤–æ–ª–æ–Ω—Ç—ë—Ä—ã –Ω–∞—à–µ–π –±–∞–∑—ã.',
                reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("‚≠ê –ß–ê–¢ –ê–î–ú–ò–ù–û–í ‚≠ê", url="https://t.me/+_iniiZ10pPljYmZi")],
                [InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='me')]]))
        
        
        elif data.startswith('hide'):
            
            await callback_query.answer(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ")
            await app.delete_messages(callback_query.message.chat.id, callback_query.message.id)
        
        elif data.startswith('set country'):
            
            await callback_query.message.edit(f"üåé –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
                                              reply_markup=COUNTRIES_1)
        
        elif data.startswith('country'):
            
            user_state = sql_select(f"SELECT * FROM net WHERE id = {callback_query.from_user.id}")
            
            sql_edit(f'UPDATE net SET country=(?) WHERE id={callback_query.from_user.id}', (data.split()[1],))
            
            await callback_query.message.edit(f"‚úÖ –°—Ç—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
                                              reply_markup=InlineKeyboardMarkup(
                                                  [[InlineKeyboardButton('–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ‚Ü©Ô∏è', callback_data='me')]]))
        
        elif data.startswith('change'):
            
            msg = data.split(' ', 3)
            
            if callback_query.from_user.id != int(msg[2]):
                await callback_query.answer('‚ò∫Ô∏è –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∫–Ω–æ–ø–∫–∞!')
                return
            
            await callback_query.answer('üëá –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø—É—Ç–∞—Ü–∏—é')
            
            await callback_query.message.reply(
                'ü§î –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø—É—Ç–∞—Ü–∏—é',
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton(
                        '–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è ‚ö†',
                        callback_data=f'reputation 0 {msg[1]} {callback_query.from_user.id}')],
                    [InlineKeyboardButton(
                        '–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä ‚ö†',
                        callback_data=f'reputation 1 {msg[1]} {callback_query.from_user.id}')],
                    [InlineKeyboardButton(
                        '–°–ö–ê–ú–ú–ï–† ‚ö†',
                        callback_data=f'reputation 2 {msg[1]} {callback_query.from_user.id}')],
                    [InlineKeyboardButton(
                        '–ü–µ—Ç—É—Ö üêì',
                        callback_data=f'reputation 3 {msg[1]} {callback_query.from_user.id}')],
                ]))
        
        elif data.startswith('approve'):
            
            msg = data.split(' ', 4)
            
            admin = sql_select(f'SELECT * FROM admins WHERE id = {msg[2]}')[0]
            intern = sql_select(f"SELECT * FROM admins WHERE id={msg[1]}")[0]
            
            if not admin[3]:
                sql_edit(f'UPDATE admins SET dob=(?) WHERE id={admin[0]}', (1,))
            else:
                sql_edit(f'UPDATE admins SET dob=dob+1 WHERE id={admin[0]}', ())
            
            if not intern[3]:
                sql_edit(f'UPDATE admins SET dob=(?) WHERE id={callback_query.from_user.id}', (1,))
            else:
                sql_edit(f'UPDATE admins SET dob=dob+1 WHERE id={callback_query.from_user.id}', ())
            
            admin_productivity = sql_select(f"SELECT * FROM daily_productivity WHERE id={admin[0]}")
            intern_productivity = sql_select(f"SELECT * FROM daily_productivity WHERE id={intern[0]}")
            
            if not intern_productivity:
                sql_edit(f'INSERT INTO daily_productivity VALUES(?, ?)',
                         (callback_query.from_user.id, 1))
            else:
                sql_edit(f'UPDATE daily_productivity SET productivity=productivity+1 '
                         f'WHERE id={callback_query.from_user.id}', ())
            
            if not admin_productivity:
                sql_edit(f'INSERT INTO daily_productivity VALUES(?, ?)',
                         (admin[0], 1))
            else:
                sql_edit(f'UPDATE daily_productivity SET productivity=productivity+1 '
                         f'WHERE id={admin[0]}', ())
            
            await callback_query.message.edit('‚úÖ')
        
        elif data.startswith('tutor'):
            msg = data.split(' ', 4)
            
            if callback_query.from_user.id != int(msg[3]):
                await callback_query.answer('‚ò∫Ô∏è –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∫–Ω–æ–ø–∫–∞!')
                return
            
            if msg[1] == '0':
                reputation = '–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è ‚ö†'
            elif msg[1] == '1':
                reputation = '–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä ‚ö†'
            elif msg[1] == '2':
                reputation = '–°–ö–ê–ú–ú–ï–† ‚ö†'
            elif msg[1] == '3':
                reputation = '–ü–µ—Ç—É—Ö üêì'
            else:
                reputation = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
            
            sql_edit(f'UPDATE scammers SET reputation = (?) WHERE id = (?);',
                     (reputation, msg[2]))
            
            try:
                
                scammer = sql_select(f"SELECT * FROM scammers WHERE id={msg[2]}")[0]
                admin = sql_select(f'SELECT * FROM admins WHERE intern = {callback_query.from_user.id}')[0]
                
                await app.send_message(
                    chat_id=admin[0],
                    text=f'üÜï –ó–∞—è–≤–∫–∞ –æ—Ç {callback_query.from_user.mention}\n\n'
                         f'{scammer[0]}\n'
                         f'{scammer[2]}\n'
                         f'{scammer[3]}',
                    reply_markup=InlineKeyboardMarkup(
                        [[InlineKeyboardButton(
                            '‚úÖ',
                            callback_data=f'approve {callback_query.from_user.id} {admin[0]}'),
                            InlineKeyboardButton(
                                '‚ùå',
                                callback_data=f'del {msg[2]}')]]
                    )
                )
                await callback_query.message.edit(f"‚úÖ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–∞—à–µ–º—É –∫—É—Ä–∞—Ç–æ—Ä—É!</b>")
            
            except Exception as e:
                await callback_query.message.reply(f"‚õî <b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!</b> @PapaBuyer {e}")
        
        elif data.startswith('change_reputation'):
            
            msg = data.split(' ', 3)
            
            if callback_query.from_user.id != int(msg[3]):
                await callback_query.answer('‚ò∫Ô∏è –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∫–Ω–æ–ø–∫–∞!')
                
            else:
                await callback_query.message.edit(
                    'ü§î –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø—É—Ç–∞—Ü–∏—é',
                    reply_markup=InlineKeyboardMarkup([
                        
                        [InlineKeyboardButton('–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è ‚ö†',
                                              callback_data=f'reputation 0 {msg[1]} {msg[2]}')],
                        
                        [InlineKeyboardButton('–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä ‚ö†',
                                              callback_data=f'reputation 1 {msg[1]} {msg[2]}')],
                        
                        [InlineKeyboardButton('–°–ö–ê–ú–ú–ï–† ‚ö†', callback_data=f'reputation 2 {msg[1]} {msg[2]}')],
                        
                        [InlineKeyboardButton('–ü–µ—Ç—É—Ö üêì', callback_data=f'reputation 3 {msg[1]} {msg[2]}')], ]))
            
        elif data.startswith('reputation'):
            
            msg = data.split(' ', 4)
            
            if callback_query.from_user.id != int(msg[3]):
                await callback_query.answer('‚ò∫Ô∏è –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∫–Ω–æ–ø–∫–∞!')
            else:
                try:
                    
                    if msg[1] == '0':
                        reputation = '–ü–ª–æ—Ö–∞—è –†–µ–ø—É—Ç–∞—Ü–∏—è ‚ö†'
                    elif msg[1] == '1':
                        reputation = '–í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä ‚ö†'
                    elif msg[1] == '2':
                        reputation = '–°–ö–ê–ú–ú–ï–† ‚ö†'
                    elif msg[1] == '3':
                        reputation = '–ü–µ—Ç—É—Ö üêì'
                    else:
                        reputation = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
                    
                    sql_edit(f'UPDATE scammers SET reputation = (?) WHERE id = (?);',
                             (reputation, msg[2]))
                    
                    admin = sql_select(f"SELECT * FROM admins WHERE id={callback_query.from_user.id}")[0]
                    
                    if not admin[3]:
                        sql_edit(f'UPDATE admins SET dob=(?) WHERE id={callback_query.from_user.id}', (1,))
                    else:
                        sql_edit(f'UPDATE admins SET dob=dob+1 WHERE id={callback_query.from_user.id}', ())
                    
                    productivity = sql_select(f"SELECT * FROM daily_productivity "
                                              f"WHERE id={callback_query.from_user.id}")
                    
                    if not productivity:
                        sql_edit(f'INSERT INTO daily_productivity VALUES(?, ?)', (callback_query.from_user.id, 1))
                    else:
                        sql_edit(f'UPDATE daily_productivity SET productivity=productivity+1 '
                                 f'WHERE id={callback_query.from_user.id}', ())
                    
                    await callback_query.message.edit(
                        '<b>‚úÖ | + 1 –∑–∞—è–≤–∫–∞</b>\n\n'
                        f'üí™ –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - {admin[3] + 1}\n\n'
                        f'‚ÑπÔ∏è #NotInLog.')
                
                
                except Exception as exc:
                    await app.send_message(DIMA, f'ü¶ç –û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ reputation: {exc}')
                    await callback_query.message.edit(exc)
                
                try:
                    await app.send_message(msg[1], 'üëÄ –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –≤ –±–∞–∑–µ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞',
                                           reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(
                                               text='–ß–µ–∫–Ω—É—Ç—å —Å–µ–±—è üîé',
                                               callback_data=f'check {msg[1]}'
                                           )]]))
                    commands.changed += 1
                
                except Exception as e:
                    await app.send_message(DIMA, f'‚õî –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n\n<pre>{e}</pre>')
                
                scammer = sql_select(f"SELECT * FROM scammers WHERE id={msg[2]}")[0]
                
                try:
                    
                    keyboard = InlineKeyboardMarkup(
                        [
                            [InlineKeyboardButton(text='‚Ñπ –ü–†–û–§–ò–õ–¨ ‚ÑπÔ∏è', user_id=msg[2])],
                        ]
                    
                    )
                    
                    posted_message = await app.send_message(-1001652069822, f'''
–ê–¥–º–∏–Ω {callback_query.from_user.mention} –∑–∞–Ω—ë—Å –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–∞–∑—É!
#id{callback_query.from_user.id} #–∑–∞–Ω–æ—Å_–≤_–±–¥
=============
–î–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î:

<b>üÜî ID</b>: <code>{scammer[0]}</code>
<a href=/'tg://openmessage?user_id={scammer[0]}/'>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>
<b>‚öñÔ∏è –†–µ–ø—É—Ç–∞—Ü–∏—è</b>: <code>{reputation}</code>
<b>üìñ –û–ø–∏—Å–∞–Ω–∏–µ</b>: <i>{scammer[3]}</i>
=============
–ö–æ–º–∞–Ω–¥–∞: <code>/scam {scammer[0]} scammer[3]</code>
                                            ''', reply_markup=keyboard)
                    await callback_query.message.edit(
                        '<b>‚úÖ | + 1 –∑–∞—è–≤–∫–∞</b>\n\n'
                        f'üí™ –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - {admin[3] + 1}\n\n'
                        f'‚ÑπÔ∏è {posted_message.link}')
                
                except errors.ButtonUserPrivacyRestricted:
                    posted_message = await app.send_message(-1001652069822, f'''
–ê–¥–º–∏–Ω {callback_query.from_user.mention} –∑–∞–Ω—ë—Å –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–∞–∑—É!
#id{callback_query.from_user.id} #–∑–∞–Ω–æ—Å_–≤_–±–¥
=============
–î–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î:

<b>üÜî ID</b>: <code>{scammer[0]}</code>
<a href=/'tg://openmessage?user_id={scammer[0]}/'>–í–µ—á–Ω–∞—è –°—Å—ã–ª–∫–∞</a>
<b>‚öñÔ∏è –†–µ–ø—É—Ç–∞—Ü–∏—è</b>: <code>{reputation}</code>
<b>üìñ –û–ø–∏—Å–∞–Ω–∏–µ</b>: <i>{scammer[3]}</i>
=============
–ö–æ–º–∞–Ω–¥–∞: <code>/scam {scammer[0]} scammer[3]</code>''')
                    
                    await callback_query.message.edit(
                        '<b>‚úÖ | + 1 –∑–∞—è–≤–∫–∞</b>\n\n'
                        f'üí™ –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - {admin[3] + 1}\n\n'
                        f'‚ÑπÔ∏è {posted_message.link}')
        
        
        elif data.startswith('privet'):
            await callback_query.answer('–ª–∞–¥–Ω–æ')
        
        elif data.startswith('support'):
            
            await callback_query.message.edit(
                f'‚öô {callback_query.from_user.mention}, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:',
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton('–°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ üò°', callback_data='reportscammer')],
                    [InlineKeyboardButton('–°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ üêû', callback_data='bugreport')],
                    [InlineKeyboardButton('–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é üí°', callback_data='idea')],
                    [InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ü¶îüí¨', callback_data='vouch')],
                    [InlineKeyboardButton('–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É üò•', callback_data='gotatrouble')],
                ]))
        
        elif data.startswith('trade'):
            
            await add_to_net(callback_query.from_user.id)
            data = sql_select(f'SELECT free_deals FROM net WHERE id = {callback_query.from_user.id}')
            
            if data and data[0][0] > 0:
                try:
                    sql_edit(
                        f'UPDATE net SET free_deals = free_deals - 1 WHERE id = {callback_query.from_user.id}', ())
                    
                    await userbot.start()
                    
                    group = await userbot.create_group(title='–°–¥–µ–ª–∫–∞ —á–µ—Ä–µ–∑ GASD üå¥', users='AntiScamDatabaseBot')
                    
                    link = (await userbot.create_chat_invite_link(group.id)).invite_link
                        
                    await userbot.stop()
                    
                    await app.send_message(
                        group.id,
                        '<a href=https://telegra.ph/file/952f65f85ddf10d64b4a5.png>\u200B</a>'
                        f'<b>{callback_query.from_user.mention}, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ —Å–¥–µ–ª–∫—É!</b>\n\n'
                        '–°–∫–æ—Ä–æ –≤ –≥—Ä—É–ø–ø—É –∑–∞–π–¥—ë—Ç –≥–∞—Ä–∞–Ω—Ç. –ê –ø–æ–∫–∞ —á—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ, –Ω–∞ —á—Ç–æ —É –≤–∞—Å —Å–¥–µ–ª–∫–∞ üëá')
                    
                    await app.send_message(
                        -1002101027116,
                        '<a href=https://telegra.ph/file/952f65f85ddf10d64b4a5.png>\u200B</a>'
                        f'<b>–ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ –æ—Ç {callback_query.from_user.mention}!</b>\n\n'
                        '–ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É',
                        reply_markup=InlineKeyboardMarkup(
                            [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ üí¨', url=link)]]))
                    
                    
                    await callback_query.message.edit(
                        f'–ó–∞–π–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É –∏ –Ω–∞–ø–∏—à–∏—Ç–µ, –Ω–∞ —á—Ç–æ —É –≤–∞—Å —Å–¥–µ–ª–∫–∞ - {link}\n\n'
                        f'–¢–∞–∫–∂–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–¥–µ–ª–∫–∏ ‚ú®',
                        reply_markup=InlineKeyboardMarkup(
                            [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ üí¨', url=link)],
                             [InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É', url=f't.me/share/url?url={link}')]]))
                except Exception as e:
                    await callback_query.message.reply(f'{e}')
            else:
                await callback_query.message.edit(
                    f'<b>‚åõ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç —Å–¥–µ–ª–æ–∫ –≤ –¥–µ–Ω—å,</b> –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–¥–µ–ª–∫—É –∑–∞–≤—Ç—Ä–∞.\n\n'
                    f'(–í –¥–µ–Ω—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ 2 —Å–¥–µ–ª–∫–∏)',
                    reply_markup=InlineKeyboardMarkup(
                        [[InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')]]))

        
        elif data.startswith('delation'):
            
            peer = await app.resolve_peer(-1001949170455)
            
            data = await app.invoke(CreateForumTopic(channel=peer, title=f'üü¢', random_id=app.rnd_id()))
            topic_id = data.updates[0].id
            
            await app.send_message(
                -1001949170455,
                '<a href=https://telegra.ph/file/5fdc0e48b596cd3fd7550.png>\u200B</a>'
                f'<b>{callback_query.from_user.mention}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç —Å –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–º!</b>\n\n'
                '–ß—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –í–∞–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è—Ö –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –∏ '
                '–∫–∞–∫ –≤–∞—Å –æ–±–º–∞–Ω—É–ª–∏. –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏—Å–ª–∞—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É –∏–ª–∏ —Ñ–æ—Ç–æ/ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç - '
                '—ç—Ç–æ –±—É–¥–µ—Ç –±–æ–ª—å—à–∏–º –ø–ª—é—Å–æ–º.',
                reply_to_message_id=topic_id)
            
            await app.send_message(
                -1002091856799,
                '<a href=https://telegra.ph/file/97faf8bb06675ffc3e764.png>\u200B</a>'
                f'<b>–ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞ –æ—Ç {callback_query.from_user.mention}!</b>\n\n'
                '–ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –µ—ë —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å',
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ üí¨', url=f'https://t.me/ReportRoblox/{topic_id}')]]))
            
            await callback_query.message.edit(
                '<a href=https://telegra.ph/file/d9f3c88c3f0e36f89bb17.png>\u200B</a>'
                '<b>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–º, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.</b>',
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ üí¨', url=f'https://t.me/ReportRoblox/{topic_id}')]]))
            
            sql_edit('INSERT INTO delations VALUES(?, ?)', (topic_id, callback_query.from_user.id))
        
        
        elif data.startswith('gotatrouble'):
            
            await callback_query.message.edit(
                'üò• –ù–∞–º –∂–∞–ª—å, —á—Ç–æ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –ø—Ä–æ–±–ª–µ–º–æ–π –≤ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ.\n\n'
                '–û–ø–∏—à–∏—Ç–µ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ',
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='support')]]))
            
            async def wait(_, message):
                
                sent_message = await app.copy_message(
                    chat_id=-1001735865508,
                    from_chat_id=message.chat.id,
                    message_id=message.id)
                await sent_message.reply(
                    f'#–¢–†–ê–ë–õ –æ—Ç {message.from_user.mention}  <code>[{message.from_user.id}]</code>'
                )
                
                await callback_query.message.edit(
                    f'<b>‚úÖ | –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à —Ñ–∏–¥–±–µ–∫!\n\n–ñ–∞–ª–æ–±–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–æ–≤',
                    reply_markup=InlineKeyboardMarkup([[
                        InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='support')]]))
                await app.delete_messages(message.chat.id, message.id)
                
                # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                app.remove_handler(wait_handler)
            
            # –°–æ–∑–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            wait_handler = MessageHandler(wait, filters.chat(
                callback_query.message.chat.id) & filters.user(callback_query.from_user.id))
            app.add_handler(wait_handler)
        
        
        elif data.startswith('vouch'):
            
            await callback_query.message.edit(
                'ü¶îüí¨ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ.\n\n'
                '–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞–∫ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ, —Ç–∞–∫ –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–∑—ã–≤—ã, –Ω–µ –±–æ–π—Ç–µ—Å—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –Ω–∞–º –≤—Å—ë, —á—Ç–æ –¥—É–º–∞–µ—Ç–µ'
                '\n\n–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ ‚ò∫Ô∏è',
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='support')]]))
            
            async def wait(_, message):
                
                sent_message = await app.copy_message(
                    chat_id=-1001735865508,
                    from_chat_id=message.chat.id,
                    message_id=message.id)
                await sent_message.reply(
                    f'#–û–¢–ó–´–í –æ—Ç {message.from_user.mention} <code>[{message.from_user.id}]</code>'
                )
                
                await callback_query.message.edit(
                    f'<b>‚úÖ | –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à —Ñ–∏–¥–±–µ–∫! –û—Ç–∑—ã–≤ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.',
                    reply_markup=InlineKeyboardMarkup([[
                        InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='support')]]))
                await app.delete_messages(message.chat.id, message.id)
                
                # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                app.remove_handler(wait_handler)
            
            # –°–æ–∑–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            wait_handler = MessageHandler(wait, filters.chat(
                callback_query.message.chat.id) & filters.user(callback_query.from_user.id))
            app.add_handler(wait_handler)
        
        elif data.startswith('appeal'):
            
            msg = data.split(' ', 2)
            
            if callback_query.from_user.id != int(msg[1]):
                await callback_query.answer('‚ò∫Ô∏è –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∫–Ω–æ–ø–∫–∞!')
                return
            
            await callback_query.answer('‚úÖ')
            
            sent = await app.send_message(
                callback_query.from_user.id,
                '<b>–•–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∞–ø–ø–µ–ª—è—Ü–∏—é? ü§î</b>\n\n'
                '–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –≤–∞—Å –¥–æ–±–∞–≤–∏–ª–∏ –ø–æ –æ—à–∏–±–∫–µ, –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∏ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É '
                '–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ.\n\n'
                '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∞–º –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ',
                reply_markup=HIDE_KB)
            
            async def wait(_, message):
                
                # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                app.remove_handler(wait_handler)
                
                sent_message = await app.copy_message(
                    chat_id=-1001902750940,
                    from_chat_id=message.chat.id,
                    message_id=message.id)
                await sent_message.reply(f'#–ê–ü–ü–ï–õ–Ø–¶–ò–Ø –æ—Ç {message.from_user.mention} '
                                         f'<pre>[{message.from_user.id}]</pre>')
                
                await sent.edit(
                    f'<b>‚úÖ | –ê–ø–ø–µ–ª—è—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ë–æ—Ç –Ω–∞–ø–∏—à–µ—Ç –≤–∞–º, –µ—Å–ª–∏ –≤–∞—Å —É–¥–∞–ª—è—Ç –∏–∑ –±–∞–∑—ã.',
                    reply_markup=HIDE_KB)
                await app.delete_messages(message.chat.id, message.id)
            
            # –°–æ–∑–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            wait_handler = MessageHandler(wait, filters.chat(
                callback_query.message.chat.id) & filters.user(callback_query.from_user.id))
            app.add_handler(wait_handler)
        
        elif data.startswith('idea'):
            await callback_query.message.edit(
                'üí° –ú—ã –æ–±–æ–∂–∞–µ–º –Ω–æ–≤—ã–µ –∏–¥–µ–∏ –∏ —Å —Ä–∞–¥–æ—Å—Ç—å—é –∏—Ö —Ä–µ–∞–ª–∏–∑—É–µ–º!\n\n'
                '–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –∏–¥–µ—é –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ –ª—Å –±–æ—Ç—É, –æ–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é –≤–ª–∞–¥–µ–ª—å—Ü—É',
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='support')]]))
            
            async def wait(_, message):
                
                sent_message = await app.copy_message(
                    chat_id=-1001735865508,
                    from_chat_id=message.chat.id,
                    message_id=message.id)
                await sent_message.reply(
                    f'#–ò–î–ï–Ø –æ—Ç {message.from_user.mention} <code>[{message.from_user.id}]</code>'
                )
                
                await callback_query.message.edit(
                    f'<b>‚úÖ | –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∏–¥–µ—é! –û–Ω–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ú®',
                    reply_markup=InlineKeyboardMarkup([[
                        InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='support')]]))
                await app.delete_messages(message.chat.id, message.id)
                
                # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                app.remove_handler(wait_handler)
            
            # –°–æ–∑–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            wait_handler = MessageHandler(wait, filters.chat(
                callback_query.message.chat.id) & filters.user(callback_query.from_user.id))
            app.add_handler(wait_handler)
        
        
        elif data.startswith('bugreport'):
            await callback_query.message.edit(
                'üêû –ù–∞–º –∂–∞–ª—å, —á—Ç–æ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –±–∞–≥–æ–º –≤ –±–æ—Ç–µ.'
                '\n\n–û–ø–∏—à–∏—Ç–µ —Å—É—Ç—å –±–∞–≥–∞ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ',
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='support')]]))
            
            async def wait(_, message):
                
                sent_message = await app.copy_message(
                    chat_id=-1001735865508,
                    from_chat_id=message.chat.id,
                    message_id=message.id)
                await sent_message.reply(
                    f'#–ë–ê–ì –æ—Ç {message.from_user.mention} <code>[{message.from_user.id}]</code>'
                )
                
                await callback_query.message.edit(
                    f'<b>‚úÖ | –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à —Ñ–∏–¥–±–µ–∫! –ñ–∞–ª–æ–±–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.',
                    reply_markup=InlineKeyboardMarkup([[
                        InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='support')]]))
                await app.delete_messages(message.chat.id, message.id)
                
                # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                app.remove_handler(wait_handler)
            
            # –°–æ–∑–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            wait_handler = MessageHandler(wait, filters.chat(
                callback_query.message.chat.id) & filters.user(callback_query.from_user.id))
            app.add_handler(wait_handler)
        
        
        elif data.startswith('channel'):
            
            if callback_query.message.chat.type == ChatType.PRIVATE:
                
                _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {callback_query.from_user.id}")
                _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {callback_query.from_user.id}")
                user_state = sql_select(f"SELECT * FROM net WHERE id = {callback_query.from_user.id}")
                
                if _fetchall_mms != [] or _fetchall_admins != [] or callback_query.from_user.id == 1032156461:
                    await callback_query.message.edit(f"üì£ –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª:",
                                                      reply_markup=InlineKeyboardMarkup([[
                                                          InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='me')
                                                      ]]))
                    
                    async def wait(_, message):
                        
                        sql_edit(f'UPDATE net SET channel=(?) WHERE id={message.from_user.id}', (message.text,))
                        await app.send_message(
                            chat_id=-1001652069822,
                            text=f'{message.from_user.mention} –ø–æ—Å—Ç–∞–≤–∏–ª —Å–µ–±–µ –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª!'
                                 f'#id{message.from_user.id} #–∏–∑–º–µ–Ω–µ–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞'
                                 f'<code>{user_state[0][4]}</code> ‚û°Ô∏è <code>{message.text}</code>')
                        
                        await callback_query.message.edit(
                            f'<b>‚úÖ | –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω</b>\n\n‚ÑπÔ∏è {user_state[0][4]} ‚û°Ô∏è {message.text}',
                            reply_markup=InlineKeyboardMarkup([[
                                InlineKeyboardButton('–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ‚Ü©Ô∏è', callback_data='me')]]))
                        await app.delete_messages(message.chat.id, message.id)
                        
                        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                        app.remove_handler(wait_handler)
                    
                    # –°–æ–∑–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
                    wait_handler = MessageHandler(wait, filters.chat(
                        callback_query.message.chat.id) & filters.user(callback_query.from_user.id))
                    app.add_handler(wait_handler)
                
                
                
                
                else:
                    await callback_query.answer(f"‚õî –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≥–∞—Ä–∞–Ω—Ç–∞–º –∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞–º", show_alert=True)
            else:
                await callback_query.answer(f"‚õî –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª—Å —Å –±–æ—Ç–æ–º", show_alert=True)
        
        elif data.startswith('me'):
            
            await callback_query.answer(f"üßø –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:")
            
            user_state = await add_to_net(callback_query.from_user.id)
            _fetchall_mms = sql_select(f"SELECT * FROM mms WHERE id = {callback_query.from_user.id}")
            _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {callback_query.from_user.id}")
            
            country = get_country_emojie(user_state[0][3])
            if not country:
                country = 'üåè'
            
            if callback_query.message.chat.type == ChatType.PRIVATE:
                if not await check_sub(callback_query):
                    return
            
            keyboard = [
                [InlineKeyboardButton('üîé –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–±—è', callback_data=f'check {callback_query.from_user.id}')],
                [InlineKeyboardButton('üì£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª', callback_data='channel')],
                [InlineKeyboardButton(f'{country} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É', callback_data='set country')],
                [InlineKeyboardButton('‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º', callback_data='howto')],
            ]
            
            if _fetchall_mms or _fetchall_admins:
                keyboard.append([InlineKeyboardButton("‚≠ê –°–ö–í–ê–î –ì–ê–ó–î–ê ‚≠ê", callback_data='squad')])
            
            keyboard.append([InlineKeyboardButton("üå¥ –ù–∞—à –ß–∞—Ç –û–±—â–µ–Ω–∏—è", url='https://t.me/+goO620eaHQo0NjMy')])
            
            await callback_query.message.edit(
                f'‚ÑπÔ∏è {callback_query.from_user.mention}, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n\n'
                f'üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: {user_state[0][8]}\n'
                f'üîé –í–∞—Å –∏—Å–∫–∞–ª–∏ {user_state[0][1]} —Ä–∞–∑',
                reply_markup=InlineKeyboardMarkup(keyboard))

            return
        
        elif data.startswith('got scammed'):
            our_group = await app.get_chat(report_group)
            await callback_query.message.edit(f'''
üò≠ <b>–í–∞—Å —Å–∫–∞–º–Ω—É–ª–∏?</b> –°–ª–µ–π—Ç–µ —Å–∫–∞–º–º–µ—Ä–∞ –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ @{our_group.username}

–ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–æ –≤ —ç—Ç–æ–º –ø–æ—Å—Ç–µ - https://t.me/AntiScamRoblox/307
            ''', reply_markup=HIDE_KB)
        
        elif data.startswith('no proofs'):
            await callback_query.message.edit(
                'ü•≤ <b>–í–∞—Å —Å–∫–∞–º–Ω—É–ª–∏ –∏ –Ω–µ—Ç –ø—Ä—É—Ñ–æ–≤?</b>\n\n'
                '–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –º–Ω–æ–≥–æ: —Å–∫—Ä–∏–Ω—ã –ø–µ—Ä–µ–ø–∏—Å–∫–∏, —Å–∫—Ä–∏–Ω—ã —Ç—Ä–µ–π–¥–æ–≤, –Ω–∏–∫–∏ –∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –≤ –∏–≥—Ä–µ '
                '–∏ –ª—é–±—É—é –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å.\n\n'
                '–ú—ã –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –ª—é–¥–µ–π –±–µ–∑ –ø—Ä—É—Ñ–æ–≤ –Ω–∞ —Å–∫–∞–º, '
                '–ø–æ—ç—Ç–æ–º—É –≤ –±—É–¥—É—â–µ–º –≤—Å–µ–≥–¥–∞ —Å–∫—Ä–∏–Ω—å—Ç–µ –ø–µ—Ä–µ–ø–∏—Å–∫—É, —á—Ç–æ–±—ã —É –≤–∞—Å –±—ã–ª–∏ –ø—Ä—É—Ñ—ã!', reply_markup=HIDE_KB)
        
        elif data.startswith('check'):
                
            data = callback_query.data
            res = await check_person_by_id(await app.get_users(data.split()[1]))
                
            await app.edit_message_text(message_id=callback_query.message.id, chat_id=callback_query.message.chat.id,
                                        text=res, reply_markup=AS_REPORT_KB)
        
        elif data.startswith('alert+'):
            commands.shown += 1
            data = callback_query.data
            res = await check_person_by_id(await app.get_users(data.split()[1]))
            
            keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton('–°–ü–†–Ø–¢–ê–¢–¨ üêµ', callback_data=f'alert- {data.split()[1]}')],
                [InlineKeyboardButton('–ó–ê–ë–ê–ù–ò–¢–¨ ‚õî', callback_data=f'ban {data.split()[1]}')]])
            
            await app.edit_message_text(message_id=callback_query.message.id,
                                        chat_id=callback_query.message.chat.id,
                                        text=res,
                                        reply_markup=keyboard)
        
        elif data.startswith('alert-'):
            commands.hidden += 1
            _fetchall_scammers = sql_select(f"SELECT * FROM scammers WHERE id = {data.split()[1]}")
            
            if not _fetchall_scammers:
                await callback_query.answer(
                    f"üò≥ –ß–µ–ª–æ–≤–µ–∫–∞ —É–∂–µ –Ω–µ—Ç –≤ –±–∞–∑–µ",
                    show_alert=True)
                return
            
            person = await app.get_users(data.split()[1])
            
            text = f'''
<a href={random.choice(scam_pictures)}>\u200B</a>
‚ö†Ô∏è {person.mention} [<code>{data.split()[1]}</code>] –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—à–µ–π –±–∞–∑–µ. –ë—É–¥—å—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã –ø—Ä–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö —Å –Ω–∏–º!

üíô <b>–†–µ–ø—É—Ç–∞—Ü–∏—è</b>: {_fetchall_scammers[0][2]}'''
            
            keyboard = InlineKeyboardMarkup([[InlineKeyboardButton('–†–ê–ó–í–ï–†–ù–£–¢–¨ üôà',
                                                                   callback_data=f'alert+ {data.split()[1]}')],
                                             [InlineKeyboardButton('–ó–ê–ë–ê–ù–ò–¢–¨ ‚õî',
                                                                   callback_data=f'ban {data.split()[1]}')]])
            
            await app.edit_message_text(message_id=callback_query.message.id,
                                        chat_id=callback_query.message.chat.id,
                                        text=text,
                                        reply_markup=keyboard)
        
        elif data.startswith('become mm'):
            
            res = '''
<b>–ö–∞–∫ —Å—Ç–∞—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º GASD?</b> üå¥

<i>–°–µ–π—á–∞—Å –≥–∞—Ä–∞–Ω—Ç–æ–º –º–æ–∂–Ω–æ —Å—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–∞–∑—ã. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –Ω–∞ @StellarwayAgency</i>
            '''
            await app.edit_message_text(message_id=callback_query.message.id,
                                        chat_id=callback_query.message.chat.id,
                                        text=res,
                                        reply_markup=HIDE_KB)
        
        elif data.startswith('become admin'):
            res = '''
<b>–ö–∞–∫ —Å—Ç–∞—Ç—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–º GASD?</b> üå¥

–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ø–∞—Å—Ç—å –∫ –Ω–∞–º –≤ –∫–æ–º–∞–Ω–¥—É - —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞–±–æ—Ä–∞—Ö –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤

–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–±–æ—Ä–∞—Ö –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –Ω–∞ @StellarwayAgency - –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å)
                    '''
            await callback_query.message.reply(text=res, reply_markup=HIDE_KB)
        
        elif data.startswith('autoban'):
            
            status = await app.get_chat_member(chat_id=callback_query.message.chat.id,
                                               user_id=callback_query.from_user.id)
            
            if status.status == ChatMemberStatus.ADMINISTRATOR or status.status == ChatMemberStatus.OWNER:
                group = sql_select(f"SELECT * FROM groups WHERE id = {callback_query.message.chat.id}")[0]
                
                if not group[2]:
                    sql_edit(f'UPDATE groups SET ban=1 WHERE id={callback_query.message.chat.id}', ())
                else:
                    val = group[2]
                    if val < 2:
                        val += 1
                    else:
                        val = -1
                    
                    sql_edit(f'UPDATE groups SET ban=(?) WHERE id={callback_query.message.chat.id}', (val,))
                
                if group[3] == 1:
                    enabledalert = '‚úÖ'
                else:
                    enabledalert = '‚ùå'
                
                if group[4] == 1:
                    enabledhelp = '‚úÖ'
                else:
                    enabledhelp = '‚ùå'
                
                if group[2] == -1:
                    autoban = '‚ùå –ê–≤—Ç–æ–±–∞–Ω –æ—Ç–∫–ª—é—á—ë–Ω'
                elif group[2] == 0:
                    autoban = '‚úÖ –ü–ª–æ—Ö–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è +'
                elif group[2] == 1:
                    autoban = '‚úÖ –í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä +'
                elif group[2] == 2:
                    autoban = '‚úÖ –ë–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –°–∫–∞–º–º–µ—Ä–æ–≤'
                else:
                    autoban = '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
                
                keyboard = InlineKeyboardMarkup(
                    [[InlineKeyboardButton(f"–ê–í–¢–û–ë–ê–ù - ({autoban}) ‚úÖ",
                                           callback_data=f'autoban {callback_query.message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledalert} –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø",
                                           callback_data=f'scamwarn {callback_query.message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledhelp} –°–õ–ò–¢–¨ –°–ö–ê–ú–ï–†–ê",
                                           callback_data=f'slivscam {callback_query.message.chat.id}')]]
                )
                
                await app.edit_message_text(message_id=callback_query.message.id,
                                            chat_id=callback_query.message.chat.id,
                                            text='–ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–≤—Ç–æ–±–∞–Ω. '
                                                 '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, –Ω–∞—á–∏–Ω–∞—è —Å –∫–∞–∫–æ–π '
                                                 '—Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –∑–∞–±–∞–Ω–µ–Ω.\n\n–í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ '
                                                 '—Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Å–∫–∞–º, –µ—Å–ª–∏ –æ–Ω –ø–∏—à–µ—Ç –≤ —á–∞—Ç.\n\n–¢—Ä–µ—Ç—å—è '
                                                 '–∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ –≤ –Ω–∞—à–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º '
                                                 '—á–∞—Ç–µ.\n\n\n<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã:</b>',
                                            reply_markup=keyboard)
            else:
                await callback_query.answer('‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –∏ –∞–¥–º–∏–Ω–∞–º –≥—Ä—É–ø–ø—ã', show_alert=True)
        
        elif data.startswith('scamwarn'):
            
            status = await app.get_chat_member(chat_id=callback_query.message.chat.id,
                                               user_id=callback_query.from_user.id)
            
            if status.status == ChatMemberStatus.ADMINISTRATOR or status.status == ChatMemberStatus.OWNER:
                group = sql_select(f"SELECT * FROM groups WHERE id = {callback_query.message.chat.id}")[0]
                
                if group[3] == 0 or not group[3]:
                    sql_edit(f'UPDATE groups SET alert=1 WHERE id={callback_query.message.chat.id}', ())
                    enabledalert = '‚úÖ'
                else:
                    sql_edit(f'UPDATE groups SET alert=0 WHERE id={callback_query.message.chat.id}', ())
                    enabledalert = '‚ùå'
                
                if group[4] == 1:
                    enabledhelp = '‚úÖ'
                else:
                    enabledhelp = '‚ùå'
                
                if group[2] == -1:
                    autoban = '‚ùå –ê–≤—Ç–æ–±–∞–Ω –æ—Ç–∫–ª—é—á—ë–Ω'
                elif group[2] == 0:
                    autoban = '‚úÖ –ü–ª–æ—Ö–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è +'
                elif group[2] == 1:
                    autoban = '‚úÖ –í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä +'
                elif group[2] == 2:
                    autoban = '‚úÖ –ë–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –°–∫–∞–º–º–µ—Ä–æ–≤'
                else:
                    autoban = '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
                
                keyboard = InlineKeyboardMarkup(
                    [[InlineKeyboardButton(f"–ê–í–¢–û–ë–ê–ù - ({autoban}) ‚úÖ",
                                           callback_data=f'autoban {callback_query.message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledalert} –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø",
                                           callback_data=f'scamwarn {callback_query.message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledhelp} –°–õ–ò–¢–¨ –°–ö–ê–ú–ï–†–ê",
                                           callback_data=f'slivscam {callback_query.message.chat.id}')]]
                )
                
                await app.edit_message_text(message_id=callback_query.message.id,
                                            chat_id=callback_query.message.chat.id,
                                            text='–ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–≤—Ç–æ–±–∞–Ω. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, '
                                                 '–Ω–∞—á–∏–Ω–∞—è —Å –∫–∞–∫–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –∑–∞–±–∞–Ω–µ–Ω.'
                                                 '\n\n–í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Å–∫–∞–º,'
                                                 ' –µ—Å–ª–∏ –æ–Ω –ø–∏—à–µ—Ç –≤ —á–∞—Ç.'
                                                 '\n\n–¢—Ä–µ—Ç—å—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ –≤ –Ω–∞—à–µ–º '
                                                 '–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —á–∞—Ç–µ.\n\n\n<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã:</b>',
                                            reply_markup=keyboard)
            else:
                await callback_query.answer('‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –∏ –∞–¥–º–∏–Ω–∞–º –≥—Ä—É–ø–ø—ã', show_alert=True)
         
        elif data.startswith('slivscam'):
            
            status = await app.get_chat_member(chat_id=callback_query.message.chat.id,
                                               user_id=callback_query.from_user.id)
            
            if status.status == ChatMemberStatus.ADMINISTRATOR or status.status == ChatMemberStatus.OWNER:
                
                group = sql_select(f"SELECT * FROM groups WHERE id = {callback_query.message.chat.id}")[0]
                
                if group[4] == 0 or not group[4]:
                    sql_edit(f'UPDATE groups SET help=1 WHERE id={callback_query.message.chat.id}', ())
                    enabledhelp = '‚úÖ'
                else:
                    sql_edit(f'UPDATE groups SET help=0 WHERE id={callback_query.message.chat.id}', ())
                    enabledhelp = '‚ùå'
                
                if group[3] == 1:
                    enabledalert = '‚úÖ'
                else:
                    enabledalert = '‚ùå'
                
                if group[2] == -1:
                    autoban = '‚ùå –ê–≤—Ç–æ–±–∞–Ω –æ—Ç–∫–ª—é—á—ë–Ω'
                elif group[2] == 0:
                    autoban = '‚úÖ –ü–ª–æ—Ö–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è +'
                elif group[2] == 1:
                    autoban = '‚úÖ –í–æ–∑–º–æ–∂–Ω–æ –°–∫–∞–º–º–µ—Ä +'
                elif group[2] == 2:
                    autoban = '‚úÖ –ë–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –°–∫–∞–º–º–µ—Ä–æ–≤'
                else:
                    autoban = '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
                
                keyboard = InlineKeyboardMarkup(
                    [[InlineKeyboardButton(f"–ê–í–¢–û–ë–ê–ù - ({autoban}) ‚úÖ",
                                           callback_data=f'autoban {callback_query.message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledalert} –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø",
                                           callback_data=f'scamwarn {callback_query.message.chat.id}')],
                     [InlineKeyboardButton(f"{enabledhelp} –°–õ–ò–¢–¨ –°–ö–ê–ú–ï–†–ê",
                                           callback_data=f'slivscam {callback_query.message.chat.id}')]]
                )
                
                await app.edit_message_text(message_id=callback_query.message.id,
                                            chat_id=callback_query.message.chat.id,
                                            text='–ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–≤—Ç–æ–±–∞–Ω. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, –Ω–∞—á–∏–Ω–∞—è —Å –∫–∞–∫–æ–π'
                                                 ' —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –∑–∞–±–∞–Ω–µ–Ω.\n\n–í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ '
                                                 '—Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Å–∫–∞–º, –µ—Å–ª–∏ –æ–Ω –ø–∏—à–µ—Ç –≤ —á–∞—Ç.\n\n–¢—Ä–µ—Ç—å—è '
                                                 '–∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ –≤ –Ω–∞—à–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º '
                                                 '—á–∞—Ç–µ.\n\n\n<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã:</b>',
                                            reply_markup=keyboard)
            else:
                await callback_query.answer('‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –∏ –∞–¥–º–∏–Ω–∞–º –≥—Ä—É–ø–ø—ã', show_alert=True)
        
        elif data.startswith('admins'):
            commands.admins += 1
            
            if callback_query.from_user.id in banned:
                await callback_query.answer(
                    f'‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞',
                    show_alert=True)
                return
            
            banned.append(callback_query.from_user.id)
            
            admins = sql_select(f"SELECT * FROM admins")
            text = f'üí™ <b>–ê–¥–º–∏–Ω—ã –ì–ê–ó–î–∞ ({len(admins)} / 15):</b>\n'
            buttons = []
            
            msg = await app.edit_message_media(
                callback_query.message.chat.id,
                callback_query.message.id,
                InputMediaPhoto('https://telegra.ph/file/99f94a46ba5387df946c7.png'))
            
            await msg.edit(f'‚è≥ {callback_query.from_user.mention}, –∑–∞–≥—Ä—É–∂–∞–µ–º...\n\n‚ÑπÔ∏è {random.choice(hints)}')
            
            for admin in admins:
                try:
                    
                    person = await app.get_users(admin[0])
                    
                    if admin[2] == 0:
                        role = 'üçºüë∂'
                    elif admin[2] == 1:
                        role = 'üëãü§ì'
                    elif admin[2] == 2:
                        role = 'üî•ü•∏'
                    elif admin[2] == 3:
                        role = 'üèÜüòé'
                    else:
                        role = '‚ùì‚ùì'
                    
                    buttons.append([InlineKeyboardButton(text=f'{role} {person.first_name}',
                                                         callback_data=f'check {admin[0]}')])
                
                except Exception as e:
                    await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤\n\n{e}')
                    pass
            
            buttons.append([InlineKeyboardButton("–°–¢–ê–¢–¨ –ê–î–ú–ò–ù–û–ú üîé", callback_data="become admin")])
            await msg.edit(text=text, reply_markup=InlineKeyboardMarkup(buttons))
            
            banned.remove(callback_query.from_user.id)
        
        elif data.startswith('mms'):
            commands.mms += 1
            if callback_query.from_user.id in banned:
                await callback_query.answer(
                    f'‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞',
                    show_alert=True
                )
                return
            
            banned.append(callback_query.from_user.id)
            
            mms = sql_select(f"SELECT * FROM mms")
            buttons = []
            
            msg = await app.edit_message_media(
                callback_query.message.chat.id,
                callback_query.message.id,
                InputMediaPhoto('https://telegra.ph/file/cbcdf145de97000c55dc1.png')
            )
            
            await msg.edit(f'‚è≥ {callback_query.from_user.mention}, –∑–∞–≥—Ä—É–∂–∞–µ–º...\n\n‚ÑπÔ∏è {random.choice(hints)}')
            
            for mm in mms:
                user_state = await new_search(mm[0])
                
                try:
                    person = await app.get_users(mm[0])
                    buttons.append([InlineKeyboardButton(text=f' {person.first_name} | üîé {user_state[0][1]}',
                                                         callback_data=f'check {mm[0]}')])
                
                except Exception as e:
                    await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≥–∞—Ä–∞–Ω—Ç–æ–≤\n\n{e}')
                    pass
            
            buttons.append([InlineKeyboardButton('–ö–¢–û –¢–ê–ö–û–ô –ì–ê–†–ê–ù–¢? ü§ì', url='https://t.me/AntiScamRoblox/301')])
            buttons.append([InlineKeyboardButton("–°–¢–ê–¢–¨ –ì–ê–†–ê–ù–¢–û–ú ü¶î", callback_data="become mm")])
            
            await msg.edit(text='', reply_markup=InlineKeyboardMarkup(buttons))
            banned.remove(callback_query.from_user.id)
        
        elif data.startswith('refresh donations'):
            
            the_latest_donation = sql_select('SELECT * FROM donations ORDER BY time DESC LIMIT 1')
            top_donation = sql_select('SELECT * FROM donations '
                                      f'WHERE {time.time()}<time+2592000 ORDER BY amount DESC LIMIT 1')
            
            try:
                await callback_query.message.edit(
                    '‚ö° <b>–¢–û–ü –î–û–ù–ê–¢ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π:\n\n'
                    f'{top_donation[0][1]} - {top_donation[0][3]}RUB</b>\n'
                    f'<i>{top_donation[0][2]}</i>'
                    '\n______\n\n'
                    '‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–Ω–∞—Ç:\n\n'
                    f'{the_latest_donation[0][1]} - {the_latest_donation[0][3]}RUB\n'
                    f'<i>{the_latest_donation[0][2]}</i>'
                    '\n______\n\n'
                    f'–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞ {datetime.now()}'[:-10],
                    reply_markup=InlineKeyboardMarkup(
                        [[InlineKeyboardButton('–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å ‚ö°',
                                               url='https://www.donationalerts.com/c/samoironia')],
                         [InlineKeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å ‚Ü©', callback_data='refresh donations')]]
                    ))
            except Exception as e:
                await callback_query.answer(f'üëÄ –ù–æ–≤—ã—Ö –¥–æ–Ω–∞—Ç–æ–≤ –µ—â—ë –Ω–µ –±—ã–ª–æ', show_alert=True)
                await app.send_message(DIMA, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–æ–Ω–∞—Ç–æ–≤\n\n<pre>{e}</pre>')
        
        elif data.startswith('in_dev'):
            await callback_query.answer('üõ†Ô∏è –†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', show_alert=True)
        
        elif data.startswith('good_morning'):
            await callback_query.answer(random.choice(good_morning_advices), show_alert=True)
        
        elif data.startswith('good_night'):
            await callback_query.answer(random.choice(good_night_advices), show_alert=True)
        
        elif data.startswith('faq'):
            a = int(data.split(' ', 2)[1])
            
            if a == 0:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:',
                                                  reply_markup=InlineKeyboardMarkup(
                                                      [[InlineKeyboardButton(
                                                          'ü§î –ö—Ç–æ —Ç–∞–∫–æ–π –≥–∞—Ä–∞–Ω—Ç?',
                                                          callback_data='faq 1')],
                                                          [InlineKeyboardButton(
                                                              'üîç –ö–∞–∫ –Ω–∞–π—Ç–∏ –≥–∞—Ä–∞–Ω—Ç–∞?',
                                                              callback_data='faq 2')],
                                                          [InlineKeyboardButton(
                                                              'üõ° –ö–∞–∫ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º?',
                                                              callback_data='faq 3')],
                                                          [InlineKeyboardButton(
                                                              '‚úÖ –ö–∞–∫ —Å—Ç–∞—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º?',
                                                              callback_data='faq 4')],
                                                          [InlineKeyboardButton(
                                                              'üò° –ö–∞–∫ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞?',
                                                              callback_data='faq 5')],
                                                          [InlineKeyboardButton(
                                                              '‚åö –ö–æ–≥–¥–∞ –Ω–∞–±–æ—Ä –Ω–∞ –∞–¥–º–∏–Ω–æ–≤?',
                                                              callback_data='faq 6')],
                                                          [InlineKeyboardButton(
                                                              'üí∏ –ú–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å —Ä–æ–ª—å –≤ –±–∞–∑–µ?',
                                                              callback_data='faq 7')],
                                                          [InlineKeyboardButton(
                                                              'üí∞ –ú–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å —Å–Ω—è—Ç–∏–µ –∏–∑ –±–∞–∑—ã?',
                                                              callback_data='faq 8')], ]
                                                  ))
            elif a == 1:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ö—Ç–æ —Ç–∞–∫–æ–π –≥–∞—Ä–∞–Ω—Ç?</b>\n\n'
                                                  '<a href=https://t.me/AntiScamRoblox/301>'
                                                  '–£ –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç –æ–± —ç—Ç–æ–º (–¢–´–ö)</a>',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
            elif a == 2:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ö–∞–∫ –Ω–∞–π—Ç–∏ –≥–∞—Ä–∞–Ω—Ç–∞?</b>\n\n'
                                                  '–í –ª—Å —Å –±–æ—Ç–æ–º –∂–º—ë–º –∫–Ω–æ–ø–∫—É "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞", –∏ –∑–∞—Ç–µ–º –≤—ã–±–∏—Ä–∞–µ–º '
                                                  '—Ä–∞–∑–¥–µ–ª –≥–∞—Ä–∞–Ω—Ç–æ–≤.\n\n–ë–æ—Ç –æ—Ç–æ–±—Ä–∞–∑–∏—Ç –≤–∞–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ª—é–¥–µ–π, '
                                                  '–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∫–∏–Ω—É—Ç –≤–∞—Å –ø—Ä–∏ —Å–¥–µ–ª–∫–µ üòâ\n\n'
                                                  '<i>–ï—Å–ª–∏ –∫–Ω–æ–ø–æ–∫ –Ω–µ—Ç, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start</i>',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
            elif a == 3:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ö–∞–∫ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º?</b>\n\n'
                                                  '–ù–∞–±–æ—Ä—ã –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –≤ https://t.me/+O_oc8pG9bQljNTVi',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
            elif a == 4:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ö–∞–∫ —Å—Ç–∞—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º?</b>\n\n'
                                                  'ü¶î <b>–£—Å–ª–æ–≤–∏—è —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–æ–º –≤ GASD</b>\n\n'
                                                  '–î–ª—è —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–æ–º –Ω—É–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –û–î–ù–û–ú–£ '
                                                  '–∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –Ω–∏–∂–µ:\n\n'
                                                  '‚ñ´Ô∏è –õ–ò–ë–û –∏–º–µ—Ç—å —Ç–æ–ø –¥–æ–≤–µ—Ä–∫—É –ë–û–õ–ï–ï 80–ö —Ä—É–±–ª–µ–π\n'
                                                  '‚ñ´Ô∏è –õ–ò–ë–û –∏–º–µ—Ç—å –±–æ–ª–µ–µ 400 –ø—Ä—É—Ñ–æ–≤ '
                                                  '<i>(–ù–µ –º—É—Å–æ—Ä–Ω—ã—Ö, –ø—Ä—É—Ñ—ã –ø–æ 50 —Ä—É–± –Ω–µ –ø—Ä–æ–∫–∞—Ç—è—Ç)</i>\n'
                                                  '‚ñ´Ô∏è –õ–ò–ë–û –∏–º–µ—Ç—å –±–æ–ª—å—à–æ–µ –¥–æ–≤–µ—Ä–∏–µ –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ @PapaBuyer\n\n'
                                                  '–¢–µ–∫—Å—Ç –≤—ã—à–µ –ø—Ä–æ –≤–∞—Å? '
                                                  '–ü–∏—à–∏—Ç–µ @Anya_its_here, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º ;)',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
            elif a == 5:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ö–∞–∫ —Å–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞?</b>\n\n'
                                                  '–ù–∞—à–∞ –±–∞–∑–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç 2 —Å–ø–æ—Å–æ–±–∞ —Å–ª–∏–≤–∞ —Å–∫–∞–º–º–µ—Ä–æ–≤:\n\n'
                                                  '1Ô∏è‚É£ –°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ –∂–∞–ª–æ–± - @GasdReport\n'
                                                  '- <i>–ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É –∏ –∫–∏–¥–∞–µ—Ç–µ –ø—Ä—É—Ñ—ã —Å–∫–∞–º–∞, –∞–¥–º–∏–Ω—ã –∏—Ö '
                                                  '—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç –∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ä–µ—à–µ–Ω–∏–µ: –∑–∞–Ω–æ—Å–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–∞–∑—É '
                                                  '–∏–ª–∏ –Ω–µ—Ç.</i>\n\n'
                                                  '2Ô∏è‚É£ –°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –ª—Å —Å –±–æ—Ç–æ–º\n'
                                                  '- <i>–í –ª—Å —Å –±–æ—Ç–æ–º –Ω–∞–∂–∏–º–∞–µ—Ç–µ –∫–Ω–æ–ø–∫—É "–°–ª–∏—Ç—å —Å–∫–∞–º–º–µ—Ä–∞" –∏ '
                                                  '–¥–µ–π—Å—Ç–≤—É–µ—Ç–µ —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'
                                                  '–∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ\n\n'
                                                  '–ï—Å–ª–∏ –∫–Ω–æ–ø–æ–∫ –Ω–µ—Ç, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start</i>',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
            elif a == 6:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ö–æ–≥–¥–∞ –Ω–∞–±–æ—Ä –Ω–∞ –∞–¥–º–∏–Ω–æ–≤?</b>\n\n'
                                                  '–í —Å—Ä–µ–¥–Ω–µ–º –Ω–∞–±–æ—Ä—ã –ø—Ä–æ—Ö–æ–¥—è—Ç 2 —Ä–∞–∑–∞ –≤ –º–µ—Å—è—Ü, –≤—ã –º–æ–∂–µ—Ç–µ '
                                                  '—Å–ª–µ–¥–∏—Ç—å –∑–∞ –Ω–∏–º–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ @AntiScamRoblox –∏ –≤ –≥—Ä—É–ø–ø–µ –Ω–∞–±–æ—Ä–æ–≤ '
                                                  '(https://t.me/+O_oc8pG9bQljNTVi)',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
            elif a == 7:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ú–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å —Ä–æ–ª—å –≤ –±–∞–∑–µ?</b>\n\n'
                                                  '–ù–ï–¢. –ú—ã –ù–ï –ø—Ä–æ–¥–∞—ë–º –∞–¥–º–∏–Ω–∫–∏/ —Ä–æ–ª–∏ –≥–∞—Ä–∞–Ω—Ç–æ–≤ –≤ –Ω–∞—à–µ–π –±–∞–∑–µ. '
                                                  '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—à—É –±–∞–∑—É, –∂–º–∏—Ç–µ –∫–Ω–æ–∫—É "–î–æ–Ω–∞—Ç—ã üí∏"',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
            elif a == 8:
                await callback_query.message.edit('üíÅ‚Äç‚ôÇÔ∏è <b>–ú–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å —Å–Ω—è—Ç–∏–µ –∏–∑ –±–∞–∑—ã?</b>\n\n'
                                                  '–ù–ï–¢. –ú—ã –ù–ï —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–∞—à–∞ —Ü–µ–ª—å - –±—ã—Ç—å –Ω–∞–¥—ë–∂–Ω—ã–º '
                                                  '–∏ —á–µ—Å—Ç–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –ª—é–¥—è–º.',
                                                  reply_markup=InlineKeyboardMarkup([[
                                                      InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©Ô∏è', callback_data='faq 0')]]))
    
        elif data.startswith('top_reporters'):
            
            await callback_query.message.edit('üòé')
            await app.send_chat_action(callback_query.message.chat.id, ChatAction.TYPING)
            
            leaders = sql_select(f'SELECT id, contribution FROM net ORDER BY contribution DESC LIMIT 8')
            
            user_is_leader = False
            
            text = ('üèÜ <b>–¢–æ–ø –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–ª–∏—Ç—ã—Ö —Å–∫–∞–º–º–µ—Ä–æ–≤:</b>\n'
                    '<a href=https://telegra.ph/file/cff90a1e4873fe560010e.png>\u200B</a>\n')
            
            i = 0
            for leader in leaders:
                
                i += 1
                try:
                    if leader[0] == callback_query.from_user.id:
                        
                        user_is_leader = True
                        text += f'<b>{numberEmojies[i]} ü•∑{leader[1]} {callback_query.from_user.mention[:]}</b>\n'
                    
                    else:
                        
                        user = await app.get_users(leader[0])
                        text += f'{numberEmojies[i]} <code>ü•∑</code>{leader[1]} {user.mention[:]}\n'
                
                except Exception:
                    pass
            
            if not user_is_leader:
                all_sorted = sql_select(f'SELECT id FROM net ORDER BY contribution DESC')
                rating = 0
                for user in all_sorted:
                    rating += 1
                    if user[0] == callback_query.from_user.id:
                        text += f'\n‚ÑπÔ∏è <b>–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ - {rating}</b>'
                        break
            
            text += f'\n<a href=https://t.me/+rOaEL4igLQVhMjVi>{random.choice(lol)} –ß–∞—Ç –¥–ª—è —Å–ª–∏–≤–∞ —Å–∫–∞–º–º–µ—Ä–æ–≤</a>'
            
            await callback_query.message.edit(text, reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ‚ú®', callback_data='stats')],
                [InlineKeyboardButton('–¢–æ–ø –∞–¥–º–∏–Ω–æ–≤ üòé', callback_data='top_admins'),
                 InlineKeyboardButton('–¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö üê±', callback_data='top_mms')]]))
            
            await app.send_chat_action(callback_query.message.chat.id, ChatAction.CANCEL)
            return
        
        elif data.startswith('top_admins'):
            
            await callback_query.message.edit('üòé')
            await app.send_chat_action(callback_query.message.chat.id, ChatAction.TYPING)
            
            leaders = sql_select(f'SELECT id, dob FROM admins ORDER BY dob DESC LIMIT 8')
            
            user_is_leader = False
            
            text = ('üèÜ <b>–¢–æ–ø —Å–∞–º—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤:</b>\n'
                    '<a href=https://telegra.ph/file/cff90a1e4873fe560010e.png>\u200B</a>\n')
            
            i = 0
            for leader in leaders:
                
                i += 1
                try:
                    if leader[0] == callback_query.from_user.id:
                        
                        user_is_leader = True
                        text += f'<b>{numberEmojies[i]} ü§†{leader[1]} {callback_query.from_user.mention[:]}</b>\n'
                    
                    else:
                        
                        user = await app.get_users(leader[0])
                        text += f'{numberEmojies[i]} <code>ü§†</code>{leader[1]} {user.mention[:]}\n'
                
                except Exception:
                    pass
            
            _fetchall_admins = sql_select(f"SELECT * FROM admins WHERE id = {callback_query.from_user.id}")
            
            if not user_is_leader and _fetchall_admins:
                all_sorted = sql_select(f'SELECT id FROM admins ORDER BY dob DESC')
                rating = 0
                for user in all_sorted:
                    rating += 1
                    if user[0] == callback_query.from_user.id:
                        text += f'\n‚ÑπÔ∏è <b>–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ - {rating}</b>'
                        break
            
            text += f'\n<a href=https://t.me/+rOaEL4igLQVhMjVi>{random.choice(lol)} –ß–∞—Ç –¥–ª—è —Å–ª–∏–≤–∞ —Å–∫–∞–º–º–µ—Ä–æ–≤</a>'
            
            await callback_query.message.edit(text, reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ‚ú®', callback_data='stats')],
                [InlineKeyboardButton('–¢–æ–ø –ø–æ —Å–ª–∏–≤–∞–º üå¥', callback_data='top_admins'),
                 InlineKeyboardButton('–¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö üê±', callback_data='top_mms')]]))
            
            await app.send_chat_action(callback_query.message.chat.id, ChatAction.CANCEL)
            return
        
        elif data.startswith('top_mms'):
            
            await callback_query.message.edit('üòé')
            await app.send_chat_action(callback_query.message.chat.id, ChatAction.TYPING)
            
            leaders = sql_select(f'SELECT id, searches FROM net ORDER BY searches DESC LIMIT 8')
            
            user_is_leader = False
            
            text = ('üèÜ <b>–¢–æ–ø —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n'
                    '<a href=https://telegra.ph/file/cff90a1e4873fe560010e.png>\u200B</a>\n')
            
            i = 0
            for leader in leaders:
                
                i += 1
                try:
                    if leader[0] == callback_query.from_user.id:
                        
                        user_is_leader = True
                        text += f'<b>{numberEmojies[i]} üå¥{leader[1]} {callback_query.from_user.mention[:]}</b>\n'
                    
                    else:
                        
                        user = await app.get_users(leader[0])
                        text += f'{numberEmojies[i]} <code>üå¥</code>{leader[1]} {user.mention[:]}\n'
                
                except Exception:
                    pass
            
            if not user_is_leader:
                all_sorted = sql_select(f'SELECT id FROM net ORDER BY searches DESC')
                rating = 0
                for user in all_sorted:
                    rating += 1
                    if user[0] == callback_query.from_user.id:
                        text += f'\n‚ÑπÔ∏è <b>–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ - {rating}</b>'
                        break
            
            text += f'\n<a href=https://t.me/+rOaEL4igLQVhMjVi>{random.choice(lol)} –ß–∞—Ç –¥–ª—è —Å–ª–∏–≤–∞ —Å–∫–∞–º–º–µ—Ä–æ–≤</a>'
            
            await callback_query.message.edit(text, reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ‚ú®', callback_data='stats')],
                [InlineKeyboardButton('–¢–æ–ø –∞–¥–º–∏–Ω–æ–≤ üòé', callback_data='top_admins'),
                 InlineKeyboardButton('–¢–æ–ø –ø–æ —Å–ª–∏–≤–∞–º üå¥', callback_data='top_mms')]]))
            
            await app.send_chat_action(callback_query.message.chat.id, ChatAction.CANCEL)
            return
        
        elif data.startswith('stats'):
            global the_most_recent_search
            
            await callback_query.message.edit(f'''
{callback_query.from_user.mention}, –Ω–∏–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞:
<a href=https://telegra.ph/file/cff90a1e4873fe560010e.png>\u200B</a>
üö´ –°–∫–∞–º–º–µ—Ä–æ–≤ –≤ –±–∞–∑–µ: {sql_select("SELECT COUNT(id) from scammers;")[0][0]}
üëÅÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: {sql_select("SELECT COUNT(id) from users WHERE active=1;")[0][0]}

‚öñÔ∏è –ê–¥–º–∏–Ω–æ–≤: {sql_select("SELECT COUNT(id) from admins;")[0][0]}
üí∏ –ì–∞—Ä–∞–Ω—Ç–æ–≤: {sql_select("SELECT COUNT(id) from mms;")[0][0]}
üèÜÔ∏è –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö: {sql_select("SELECT COUNT(id) from net WHERE is_trusted > 0;")[0][0]}

üéâ –ë–æ—Ç —É–∂–µ –≤ {sql_select("SELECT COUNT(id) from groups;")[0][0]} –≥—Ä—É–ø–ø–∞—Ö

üîé –ü–æ–∏—Å–∫–æ–≤ –ø–æ –±–∞–∑–µ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: {sql_select("SELECT SUM(searches) from net WHERE searches > 0")[0][0]}
üå¥ –í –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –∏—Å–∫–∞–ª–∏: {the_most_recent_search}
                    ''', reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton('–¢–æ–ø –ø–æ —Å–ª–∏–≤–∞–º üå¥', callback_data='top_reporters')],
                [InlineKeyboardButton('–¢–æ–ø –∞–¥–º–∏–Ω–æ–≤ üòé', callback_data='top_admins'),
                 InlineKeyboardButton('–¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö üê±', callback_data='top_mms')]]))
        
        
async def setup_good_mood(app):
    await app.start()
    await app.send_message(DIMA, 'üëã')
    if (await app.get_me()).id == 6066255260:
        await app.send_message(DIMA, '–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —Å —Ö–æ—Ä–æ—à–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º üôÇ')
        while True:
            await asyncio.sleep(1)
            hour = int(datetime.now().hour)
            minute = int(datetime.now().minute)
            second = int(datetime.now().second)
            if hour == 6 and minute == 0 and second == 0:
                try:
                    await app.send_photo(-1002091856799, random.choice(good_morning_pictures),
                                         '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ ‚òÄÔ∏è',
                                         reply_markup=InlineKeyboardMarkup([[
                                             InlineKeyboardButton('‚ò∫Ô∏è', callback_data='good_morning')]]))
                    await app.send_photo(-1002101027116, random.choice(good_morning_pictures),
                                         '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ ‚òÄÔ∏è',
                                         reply_markup=InlineKeyboardMarkup([[
                                             InlineKeyboardButton('‚ò∫Ô∏è', callback_data='good_morning')]]))
                    await app.send_document(1032156461, 'database.db')
                except Exception as e:
                    await app.send_message(1032156461, f'{e}')
            
            elif hour == 22 and minute == 30 and second == 0:
                
                sql_edit('UPDATE net SET free_checks = 10', ())
                sql_edit('UPDATE net SET free_deals = 2', ())
                
                try:
                    await app.send_message(
                        -1002091856799,
                        '<b>–ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏ –¥–Ω—è üå¥</b>\n\n'
                        f'–ù–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –∑–∞ –¥–µ–Ω—å: '
                        f'{sql_select("SELECT SUM(productivity) FROM daily_productivity")[0][0]}'
                        f'\n#day_results')
                    
                    productivity = sql_select('SELECT * FROM daily_productivity ORDER BY productivity DESC')
                    popularity = sql_select('SELECT * FROM daily_searches ORDER BY searches DESC')
                    sql_edit('DELETE FROM daily_productivity', ())
                    sql_edit('DELETE FROM daily_searches', ())
                    
                    productivity_text = '‚ù§Ô∏è <b>–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Ç–æ–ø –∞–¥–º–∏–Ω–æ–≤:</b>\n\n'
                    iter1 = 0
                    
                    for admin in productivity:
                        iter1 += 1
                        person = await app.get_users(admin[0])
                        productivity_text += f'<b>{iter1} | {person.mention}</b>\n{admin[1]} ‚úÖ –ó–∞—è–≤–æ–∫\n\n'
                    
                    productivity_text += 'üöÄ <b>–î–∞–ª—å—à–µ - –±–æ–ª—å—à–µ</b>'
                    
                    popularity_text = '‚ù§Ô∏è <b>–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Ç–æ–ø –≥–∞—Ä–∞–Ω—Ç–æ–≤:</b>\n\n'
                    iter2 = 0
                    
                    for mm in popularity:
                        iter2 += 1
                        person = await app.get_users(mm[0])
                        popularity_text += f'<b>{iter2} | {person.mention}</b>\n–ò—Å–∫–∞–ª–∏ üîç {mm[1]} —Ä–∞–∑\n\n'
                    
                    popularity_text += 'üöÄ <b>–î–∞–ª—å—à–µ - –±–æ–ª—å—à–µ</b>'
                    
                    await app.send_message(-1002091856799, productivity_text)
                    if len(popularity) < 50:
                        await app.send_message(-1002101027116, popularity_text)
                    
                    await app.send_photo(-1002091856799, random.choice(good_night_pictures),
                                         '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üåô',
                                         reply_markup=InlineKeyboardMarkup([[
                                             InlineKeyboardButton('üò¥', callback_data='good_night')]]))
                    await app.send_photo(-1002101027116, random.choice(good_night_pictures),
                                         '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üåô',
                                         reply_markup=InlineKeyboardMarkup([[
                                             InlineKeyboardButton('üò¥', callback_data='good_night')]]))
                    
                    await app.send_document(1032156461, 'database.db')
                
                except Exception as e:
                    await app.send_message(1032156461, f'{e}')

for app in apps:
    app.run(setup_good_mood(app))
    idle()
    
for app in apps:
    app.send_document(1032156461, 'database.db')
    app.stop()
